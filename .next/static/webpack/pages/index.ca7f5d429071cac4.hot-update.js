"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_stage_progress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/stage-progress */ \"./components/stage-progress.tsx\");\n/* harmony import */ var _utils_session_manager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/session-manager */ \"./utils/session-manager.ts\");\n// pages/index.tsx\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst TravelChatComponent = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(()=>__webpack_require__.e(/*! import() */ \"components_travel-chat_tsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../components/travel-chat */ \"./components/travel-chat.tsx\")), {\n    loadableGenerated: {\n        modules: [\n            \"index.tsx -> \" + \"../components/travel-chat\"\n        ]\n    },\n    ssr: false\n});\n_c = TravelChatComponent;\nconst MapComponent = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(()=>__webpack_require__.e(/*! import() */ \"components_map-component_tsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../components/map-component */ \"./components/map-component.tsx\")), {\n    loadableGenerated: {\n        modules: [\n            \"index.tsx -> \" + \"../components/map-component\"\n        ]\n    },\n    ssr: false\n});\n_c1 = MapComponent;\nfunction ChatPage() {\n    _s();\n    const [apiKey, setApiKey] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [apiError, setApiError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [isLoadingKey, setIsLoadingKey] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [showMap, setShowMap] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [isMobile, setIsMobile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isDetailsReady, setIsDetailsReady] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [travelDetails, setTravelDetails] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        destination: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        preferences: [],\n        budget: \"\",\n        language: \"\",\n        transport: []\n    });\n    const [currentStage, setCurrentStage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1);\n    const [isPaid, setIsPaid] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [sessionId, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        // Check if we're on mobile\n        const checkMobile = ()=>{\n            setIsMobile(window.innerWidth < 768);\n            setShowMap(window.innerWidth >= 768);\n        };\n        // Initial check\n        checkMobile();\n        // Add resize listener\n        window.addEventListener(\"resize\", checkMobile);\n        // Cleanup\n        return ()=>window.removeEventListener(\"resize\", checkMobile);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        console.log(\"[Index] Checking for session\");\n        const session = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.getStoredSession)();\n        console.log(\"[Index] Retrieved session from storage:\", {\n            hasSession: !!session,\n            destination: session === null || session === void 0 ? void 0 : session.destination,\n            sessionId: session === null || session === void 0 ? void 0 : session.sessionId,\n            callStack: new Error().stack\n        });\n        // First check session validity\n        if (!(0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.checkSessionValidity)()) {\n            console.error(\"[Index] Session is invalid or expired\");\n            window.location.replace(\"/travel-form\");\n            return;\n        }\n        // Then validate required session data\n        if (!session || !session.sessionId) {\n            console.error(\"[Index] Session ID missing\");\n            window.location.replace(\"/travel-form\");\n            return;\n        }\n        // Update lastActive timestamp\n        (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.updateLastActive)();\n        setSessionId(session.sessionId);\n        // Then validate session data\n        if (!session.destination || !session.startDate || !session.endDate || !session.preferences || !session.preferences.length || !session.startTime || !session.lastActive || !session.expiresAt) {\n            var _session_preferences;\n            console.error(\"[Index] Invalid session data:\", {\n                hasDestination: !!(session === null || session === void 0 ? void 0 : session.destination),\n                hasStartDate: !!(session === null || session === void 0 ? void 0 : session.startDate),\n                hasEndDate: !!(session === null || session === void 0 ? void 0 : session.endDate),\n                preferencesLength: session === null || session === void 0 ? void 0 : (_session_preferences = session.preferences) === null || _session_preferences === void 0 ? void 0 : _session_preferences.length,\n                hasStartTime: !!(session === null || session === void 0 ? void 0 : session.startTime),\n                hasLastActive: !!(session === null || session === void 0 ? void 0 : session.lastActive),\n                hasExpiresAt: !!(session === null || session === void 0 ? void 0 : session.expiresAt),\n                callStack: new Error().stack\n            });\n            window.location.replace(\"/travel-form\");\n            return;\n        }\n        const travelDetails = {\n            destination: session.destination,\n            startDate: session.startDate,\n            endDate: session.endDate,\n            preferences: session.preferences,\n            budget: session.budget || \"\",\n            language: session.language || \"\",\n            transport: session.transport || []\n        };\n        console.log(\"[Index] Setting travel details:\", travelDetails);\n        setTravelDetails(travelDetails);\n        setIsDetailsReady(true);\n        setCurrentStage(session.currentStage);\n        setIsPaid(session.isPaid);\n        // Then trigger Maps API key fetch if needed\n        if (!apiKey && !isLoadingKey) {\n            setIsLoadingKey(true); // Only set if we're not already loading\n        }\n    }, []);\n    // Separate effect for Maps API key - only run after session is validated\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!isLoadingKey || apiKey || !sessionId) return;\n        const fetchMapKey = async ()=>{\n            try {\n                console.log(\"[Index] Fetching Maps API key...\");\n                const response = await fetch(\"/api/maps-key\", {\n                    method: \"GET\",\n                    headers: {\n                        \"Accept\": \"application/json\"\n                    }\n                });\n                if (!response.ok) {\n                    throw new Error(\"HTTP error! status: \".concat(response.status));\n                }\n                const data = await response.json();\n                if (!data.key) {\n                    throw new Error(\"No API key in response\");\n                }\n                console.log(\"[Index] Successfully fetched Maps API key\");\n                setApiKey(data.key);\n            } catch (error) {\n                console.error(\"[Index] Error fetching Maps API key:\", error);\n                setApiError(\"Failed to load Google Maps\");\n            } finally{\n                setIsLoadingKey(false);\n            }\n        };\n        fetchMapKey();\n    }, [\n        isLoadingKey,\n        apiKey,\n        sessionId\n    ]);\n    // Add state to track updates to saved places\n    const [savedPlacesUpdate, setSavedPlacesUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const handlePlaceRemoved = (placeId)=>{\n        console.log(\"Place removed:\", placeId);\n        setSavedPlacesUpdate((prev)=>prev + 1);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!travelDetails.destination || !apiKey || !isDetailsReady) return;\n        const fetchCoordinates = async ()=>{\n            try {\n                const res = await fetch(\"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(encodeURIComponent(travelDetails.destination), \"&key=\").concat(apiKey));\n                if (!res.ok) {\n                    throw new Error(\"Failed to fetch coordinates: \".concat(res.status));\n                }\n                const data = await res.json();\n                console.log(\"Geocoding API Response:\", data);\n                if (data.results && data.results.length > 0) {\n                    const location = data.results[0].geometry.location;\n                    console.log(\"Parsed Location:\", location);\n                    // Don't update the whole travelDetails, just add coordinates\n                    setTravelDetails((prevDetails)=>({\n                            ...prevDetails,\n                            destinationLat: location.lat,\n                            destinationLng: location.lng\n                        }));\n                }\n            } catch (error) {\n                console.error(\"Error fetching coordinates:\", error);\n            }\n        };\n        fetchCoordinates();\n    }, [\n        travelDetails.destination,\n        apiKey,\n        isDetailsReady\n    ]);\n    // Save to session storage when important data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!travelDetails) return;\n        const sessionData = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.getStoredSession)();\n        if (!sessionData) {\n            window.location.replace(\"/travel-form\");\n            return;\n        }\n        // Update session with new travel details\n        const updatedSession = {\n            ...sessionData,\n            destination: travelDetails.destination,\n            startDate: travelDetails.startDate,\n            endDate: travelDetails.endDate,\n            preferences: travelDetails.preferences,\n            budget: travelDetails.budget,\n            language: travelDetails.language,\n            transport: travelDetails.transport,\n            currentStage,\n            lastActive: Date.now()\n        };\n        try {\n            _utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.storage.setItem(_utils_session_manager__WEBPACK_IMPORTED_MODULE_4__.SESSION_CONFIG.STORAGE_KEY, JSON.stringify(updatedSession));\n            console.log(\"[Index] Successfully updated session with new travel details\");\n        } catch (error) {\n            console.error(\"[Index] Failed to update session:\", error);\n            window.location.replace(\"/travel-form\");\n        }\n    }, [\n        travelDetails,\n        currentStage\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col h-[100vh] w-full bg-white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-none\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_stage_progress__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    currentStage: currentStage,\n                    isPaid: isPaid\n                }, void 0, false, {\n                    fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                    lineNumber: 243,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                lineNumber: 242,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-1 flex relative bg-white min-h-0\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"\".concat(isMobile ? \"w-full\" : \"w-[50%]\", \" h-full border-r border-gray-200 overflow-y-auto\"),\n                        children: isDetailsReady ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TravelChatComponent, {\n                            initialDetails: travelDetails,\n                            onPlaceRemoved: handlePlaceRemoved,\n                            currentStage: currentStage,\n                            onStageUpdate: setCurrentStage\n                        }, void 0, false, {\n                            fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                            lineNumber: 253,\n                            columnNumber: 25\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center h-full\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-gray-500\",\n                                children: \"Loading travel details...\"\n                            }, void 0, false, {\n                                fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                                lineNumber: 261,\n                                columnNumber: 29\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                            lineNumber: 260,\n                            columnNumber: 25\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                        lineNumber: 251,\n                        columnNumber: 17\n                    }, this),\n                    isMobile && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setShowMap(!showMap),\n                        className: \"fixed top-16 right-4 z-50 bg-white p-2 rounded-full shadow-lg\",\n                        children: showMap ? \"Hide Map\" : \"Show Map\"\n                    }, void 0, false, {\n                        fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                        lineNumber: 268,\n                        columnNumber: 21\n                    }, this),\n                    (showMap || !isMobile) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"\".concat(isMobile ? \"absolute inset-0 z-40\" : \"w-[50%]\"),\n                        children: apiKey ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MapComponent, {\n                            city: travelDetails.destination || \"\",\n                            apiKey: apiKey\n                        }, \"map-\".concat(savedPlacesUpdate), false, {\n                            fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                            lineNumber: 280,\n                            columnNumber: 33\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-full h-full flex items-center justify-center\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-red-500\",\n                                children: apiError || \"Loading map...\"\n                            }, void 0, false, {\n                                fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                                lineNumber: 287,\n                                columnNumber: 33\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                            lineNumber: 286,\n                            columnNumber: 29\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                        lineNumber: 278,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n                lineNumber: 249,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/terrancehah/Documents/terrancehah.com/pages/index.tsx\",\n        lineNumber: 240,\n        columnNumber: 9\n    }, this);\n}\n_s(ChatPage, \"kJ7stCopAwt1zc1M/Sz9+QpS7g0=\");\n_c2 = ChatPage;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"TravelChatComponent\");\n$RefreshReg$(_c1, \"MapComponent\");\n$RefreshReg$(_c2, \"ChatPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ }),

/***/ "./utils/session-manager.ts":
/*!**********************************!*\
  !*** ./utils/session-manager.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SESSION_CONFIG: function() { return /* binding */ SESSION_CONFIG; },\n/* harmony export */   checkInputLimits: function() { return /* binding */ checkInputLimits; },\n/* harmony export */   checkSession: function() { return /* binding */ checkSession; },\n/* harmony export */   checkSessionValidity: function() { return /* binding */ checkSessionValidity; },\n/* harmony export */   checkSessionWithWarning: function() { return /* binding */ checkSessionWithWarning; },\n/* harmony export */   clearPaymentReference: function() { return /* binding */ clearPaymentReference; },\n/* harmony export */   clearSession: function() { return /* binding */ clearSession; },\n/* harmony export */   generateSessionId: function() { return /* binding */ generateSessionId; },\n/* harmony export */   getPaymentReference: function() { return /* binding */ getPaymentReference; },\n/* harmony export */   getPaymentReferenceId: function() { return /* binding */ getPaymentReferenceId; },\n/* harmony export */   getPaymentStatus: function() { return /* binding */ getPaymentStatus; },\n/* harmony export */   getStorage: function() { return /* binding */ getStorage; },\n/* harmony export */   getStoredMetrics: function() { return /* binding */ getStoredMetrics; },\n/* harmony export */   getStoredSession: function() { return /* binding */ getStoredSession; },\n/* harmony export */   handleSessionExpiry: function() { return /* binding */ handleSessionExpiry; },\n/* harmony export */   initializeSession: function() { return /* binding */ initializeSession; },\n/* harmony export */   safeStorageOp: function() { return /* binding */ safeStorageOp; },\n/* harmony export */   setPaymentReference: function() { return /* binding */ setPaymentReference; },\n/* harmony export */   setPaymentReferenceId: function() { return /* binding */ setPaymentReferenceId; },\n/* harmony export */   setPaymentStatus: function() { return /* binding */ setPaymentStatus; },\n/* harmony export */   storage: function() { return /* binding */ storage; },\n/* harmony export */   updateLastActive: function() { return /* binding */ updateLastActive; },\n/* harmony export */   updateStoredMetrics: function() { return /* binding */ updateStoredMetrics; }\n/* harmony export */ });\n/* harmony import */ var _managers_stage_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../managers/stage-manager */ \"./managers/stage-manager.ts\");\n\nconst SESSION_CONFIG = {\n    STORAGE_KEY: \"travel_rizz_session\",\n    ABSOLUTE_TIMEOUT: 24 * 60 * 60 * 1000,\n    INACTIVITY_TIMEOUT: 2 * 60 * 60 * 1000,\n    WARNING_BEFORE_TIMEOUT: 5 * 60 * 1000,\n    MAX_TOTAL_INPUTS: 15,\n    PAYMENT_REF_KEY: \"payment_reference_id\"\n};\n// Safe storage access\nconst getStorage = ()=>{\n    if (true) {\n        return window.sessionStorage;\n    }\n    return null;\n};\nconst storage = getStorage();\n// Add atomic operation lock\nlet isSessionLocked = false;\nconst sessionLockTimeout = 1000; // 1 second timeout\nfunction acquireSessionLock() {\n    if (isSessionLocked) return false;\n    isSessionLocked = true;\n    return true;\n}\nfunction releaseSessionLock() {\n    isSessionLocked = false;\n}\n// Helper function to safely access storage with atomic guarantees\nconst safeStorageOp = (operation, defaultValue)=>{\n    try {\n        if (!storage) return defaultValue;\n        // Try to acquire lock\n        let lockAcquired = false;\n        let attempts = 0;\n        while(!lockAcquired && attempts < 5){\n            lockAcquired = acquireSessionLock();\n            if (!lockAcquired) {\n                attempts++;\n                // Wait a bit before trying again\n                new Promise((resolve)=>setTimeout(resolve, 50));\n            }\n        }\n        if (!lockAcquired) {\n            console.error(\"[Session] Failed to acquire lock after 5 attempts\");\n            return defaultValue;\n        }\n        try {\n            return operation();\n        } finally{\n            releaseSessionLock();\n        }\n    } catch (error) {\n        console.error(\"[Session] Storage operation failed:\", error);\n        releaseSessionLock();\n        return defaultValue;\n    }\n};\n// Helper function to safely access storage\n// export const safeStorageOp = <T>(operation: () => T, defaultValue: T): T => {\n//   try {\n//     if (!storage) return defaultValue;\n//     return operation();\n//   } catch (error) {\n//     console.error('[Session] Storage operation failed:', error);\n//     return defaultValue;\n//   }\n// };\nfunction initializeSession() {\n    const now = Date.now();\n    // Try to get existing session first\n    const existingSession = safeStorageOp(()=>{\n        const stored = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.STORAGE_KEY);\n        return stored ? JSON.parse(stored) : null;\n    }, null);\n    if (existingSession) {\n        // Update both lastActive and expiresAt\n        existingSession.lastActive = now;\n        existingSession.expiresAt = now + SESSION_CONFIG.ABSOLUTE_TIMEOUT;\n        // Ensure all stages are initialized\n        existingSession.stagePrompts = existingSession.stagePrompts || {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0\n        };\n        safeStorageOp(()=>{\n            storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(existingSession));\n        }, undefined);\n        return existingSession;\n    }\n    // Create new session if none exists\n    const sessionId = generateSessionId();\n    const session = {\n        // Session info\n        sessionId,\n        startTime: now,\n        lastActive: now,\n        expiresAt: now + SESSION_CONFIG.ABSOLUTE_TIMEOUT,\n        // Travel details\n        destination: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        preferences: [],\n        budget: \"\",\n        language: \"\",\n        transport: [],\n        // Places\n        savedPlaces: [],\n        currentStage: 1,\n        // Metrics\n        totalPrompts: 0,\n        stagePrompts: {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0\n        },\n        savedPlacesCount: 0,\n        // Payment\n        isPaid: false,\n        paymentReference: \"session_\".concat(sessionId)\n    };\n    safeStorageOp(()=>{\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n    }, undefined);\n    return session;\n}\nfunction getStoredSession() {\n    return safeStorageOp(()=>{\n        console.log(\"[Session] Attempting to get stored session\");\n        const storedData = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.STORAGE_KEY);\n        if (!storedData) {\n            console.log(\"[Session] No stored session data found\");\n            return null;\n        }\n        try {\n            const session = JSON.parse(storedData);\n            console.log(\"[Session] Successfully parsed session:\", {\n                sessionId: session.sessionId,\n                destination: session.destination,\n                startTime: new Date(session.startTime).toISOString(),\n                lastActive: new Date(session.lastActive).toISOString(),\n                expiresAt: new Date(session.expiresAt).toISOString()\n            });\n            return session;\n        } catch (error) {\n            console.error(\"[Session] Failed to parse session data:\", error);\n            return null;\n        }\n    }, null);\n}\nfunction getStoredMetrics() {\n    return safeStorageOp(()=>{\n        const session = getStoredSession();\n        if (!session) return null;\n        return {\n            interaction: {\n                totalPrompts: session.totalPrompts,\n                stagePrompts: session.stagePrompts,\n                lastActive: session.lastActive\n            },\n            places: {\n                savedCount: session.savedPlacesCount\n            },\n            payment: {\n                status: session.isPaid,\n                reference: session.paymentReference,\n                timestamp: session.paymentTimestamp\n            },\n            parameters: {\n                destination: session.destination,\n                dates: {\n                    start: session.startDate,\n                    end: session.endDate\n                },\n                preferences: session.preferences,\n                budget: session.budget,\n                language: session.language,\n                transport: session.transport\n            }\n        };\n    }, null);\n}\nfunction updateStoredMetrics(currentStage) {\n    let incrementPrompt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, incrementSavedPlaces = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    return safeStorageOp(()=>{\n        const session = getStoredSession() || initializeSession();\n        if (incrementPrompt) {\n            const { withinStageLimit } = checkInputLimits(currentStage);\n            if (withinStageLimit) {\n                // Initialize stagePrompts with all stages if it doesn't exist\n                if (!session.stagePrompts) {\n                    session.stagePrompts = {\n                        1: 0,\n                        2: 0,\n                        3: 0,\n                        4: 0,\n                        5: 0\n                    };\n                }\n                // Ensure all stages exist\n                for(let stage = 1; stage <= 5; stage++){\n                    if (typeof session.stagePrompts[stage] !== \"number\") {\n                        session.stagePrompts[stage] = 0;\n                    }\n                }\n                session.totalPrompts = (session.totalPrompts || 0) + 1;\n                session.stagePrompts[currentStage] = (session.stagePrompts[currentStage] || 0) + 1;\n            }\n        }\n        if (incrementSavedPlaces) {\n            session.savedPlacesCount = (session.savedPlacesCount || 0) + 1;\n        }\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n        return session;\n    }, null) || initializeSession();\n}\nfunction checkInputLimits(currentStage) {\n    return safeStorageOp(()=>{\n        const session = getStoredSession() || initializeSession();\n        const stagePrompts = session.stagePrompts || {\n            1: 0,\n            2: 0,\n            3: 0\n        };\n        const totalPrompts = session.totalPrompts || 0;\n        return {\n            withinStageLimit: currentStage === 3 ? (stagePrompts[currentStage] || 0) < _managers_stage_manager__WEBPACK_IMPORTED_MODULE_0__.STAGE_LIMITS[3].maxPrompts : true,\n            withinTotalLimit: currentStage === 3 ? totalPrompts < SESSION_CONFIG.MAX_TOTAL_INPUTS : true,\n            stageInputCount: stagePrompts[currentStage] || 0,\n            totalInputCount: totalPrompts\n        };\n    }, {\n        withinStageLimit: true,\n        withinTotalLimit: true,\n        stageInputCount: 0,\n        totalInputCount: 0\n    });\n}\n// Payment related functions\nfunction setPaymentStatus(isPaid) {\n    safeStorageOp(()=>{\n        const session = getStoredSession() || initializeSession();\n        session.isPaid = isPaid;\n        session.paymentTimestamp = isPaid ? Date.now() : undefined;\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n    }, undefined);\n}\nfunction getPaymentStatus() {\n    return safeStorageOp(()=>{\n        const session = getStoredSession();\n        return (session === null || session === void 0 ? void 0 : session.isPaid) || false;\n    }, false);\n}\nfunction setPaymentReference(reference) {\n    safeStorageOp(()=>{\n        const session = getStoredSession() || initializeSession();\n        session.paymentReference = reference;\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n    }, undefined);\n}\nfunction getPaymentReference() {\n    return safeStorageOp(()=>{\n        const session = getStoredSession();\n        return session === null || session === void 0 ? void 0 : session.paymentReference;\n    }, undefined);\n}\nfunction clearPaymentReference() {\n    safeStorageOp(()=>{\n        const session = getStoredSession() || initializeSession();\n        session.paymentReference = \"\";\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n    }, undefined);\n}\nfunction getPaymentReferenceId() {\n    return safeStorageOp(()=>{\n        const stored = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.PAYMENT_REF_KEY);\n        return stored || null;\n    }, null);\n}\nfunction setPaymentReferenceId(referenceId) {\n    safeStorageOp(()=>{\n        storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.PAYMENT_REF_KEY, referenceId);\n        console.log(\"[Session] Stored payment reference ID:\", referenceId);\n    }, undefined);\n}\nfunction checkSession() {\n    return safeStorageOp(()=>{\n        const currentSession = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.STORAGE_KEY);\n        if (!currentSession) {\n            const newSession = Date.now().toString();\n            storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, newSession);\n            return false;\n        }\n        return true;\n    }, false);\n}\n// Add warning mechanism\nfunction checkSessionWithWarning() {\n    return safeStorageOp(()=>{\n        const session = getStoredSession();\n        if (!session) {\n            return {\n                isValid: false,\n                shouldWarn: false\n            };\n        }\n        const now = Date.now();\n        const timeLeft = session.expiresAt - now;\n        const shouldWarn = timeLeft <= SESSION_CONFIG.WARNING_BEFORE_TIMEOUT;\n        const isValid = timeLeft > 0;\n        return {\n            isValid,\n            shouldWarn\n        };\n    }, {\n        isValid: false,\n        shouldWarn: false\n    });\n}\nfunction checkSessionValidity() {\n    return safeStorageOp(()=>{\n        console.log(\"[Session] Checking session validity\");\n        const storedData = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.STORAGE_KEY);\n        if (!storedData) {\n            console.log(\"[Session] No session found during validity check\");\n            return false;\n        }\n        let session;\n        try {\n            session = JSON.parse(storedData);\n            console.log(\"[Session] Parsed session for validity check:\", {\n                sessionId: session.sessionId,\n                destination: session.destination,\n                startTime: new Date(session.startTime).toISOString(),\n                lastActive: new Date(session.lastActive).toISOString(),\n                expiresAt: new Date(session.expiresAt).toISOString()\n            });\n        } catch (error) {\n            console.error(\"[Session] Failed to parse session during validity check:\", error);\n            return false;\n        }\n        const now = Date.now();\n        console.log(\"[Session] Validity check times:\", {\n            now: new Date(now).toISOString(),\n            expiresAt: new Date(session.expiresAt).toISOString(),\n            lastActive: new Date(session.lastActive).toISOString(),\n            timeTillExpiry: session.expiresAt - now,\n            inactiveTime: now - session.lastActive,\n            absoluteTimeout: SESSION_CONFIG.ABSOLUTE_TIMEOUT,\n            inactivityTimeout: SESSION_CONFIG.INACTIVITY_TIMEOUT\n        });\n        // Check absolute timeout\n        if (now >= session.expiresAt) {\n            console.log(\"[Session] Session expired due to absolute timeout. Times:\", {\n                now,\n                expiresAt: session.expiresAt,\n                diff: now - session.expiresAt\n            });\n            clearSession();\n            return false;\n        }\n        // Check inactivity timeout\n        const inactiveTime = now - session.lastActive;\n        if (inactiveTime >= SESSION_CONFIG.INACTIVITY_TIMEOUT) {\n            console.log(\"[Session] Session expired due to inactivity. Times:\", {\n                now,\n                lastActive: session.lastActive,\n                inactiveTime,\n                inactivityTimeout: SESSION_CONFIG.INACTIVITY_TIMEOUT\n            });\n            clearSession();\n            return false;\n        }\n        // Only update lastActive if it's been more than 1 minute\n        if (inactiveTime > 60000) {\n            console.log(\"[Session] Updating lastActive time in validity check\");\n            session.lastActive = now;\n            storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n        }\n        return true;\n    }, false);\n}\n// Session expiry handler\nfunction handleSessionExpiry() {\n    safeStorageOp(()=>{\n        var _window_getSavedPlaces, _window;\n        // Don't handle expiry if we're already on the landing page\n        if (window.location.pathname === \"/\" || window.location.pathname === \"\") {\n            return;\n        }\n        // Save current state if needed\n        const currentState = {\n            messages: ((_window_getSavedPlaces = (_window = window).getSavedPlaces) === null || _window_getSavedPlaces === void 0 ? void 0 : _window_getSavedPlaces.call(_window)) || [],\n            lastUrl: window.location.pathname\n        };\n        storage === null || storage === void 0 ? void 0 : storage.setItem(\"expiredSessionState\", JSON.stringify(currentState));\n        // Clear session\n        clearSession();\n        // Only redirect if we're not already on the landing page\n        const currentUrl = new URL(window.location.href);\n        if (!currentUrl.searchParams.has(\"return\")) {\n            window.location.href = \"/?return=\".concat(encodeURIComponent(currentState.lastUrl));\n        }\n    }, undefined);\n}\nfunction clearSession() {\n    console.log(\"[Session] Clearing session storage\");\n    safeStorageOp(()=>{\n        storage === null || storage === void 0 ? void 0 : storage.removeItem(SESSION_CONFIG.STORAGE_KEY);\n    }, undefined);\n}\nfunction updateLastActive() {\n    return safeStorageOp(()=>{\n        const storedData = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION_CONFIG.STORAGE_KEY);\n        if (!storedData) {\n            console.log(\"[Session] No session to update lastActive\");\n            return false;\n        }\n        try {\n            const session = JSON.parse(storedData);\n            session.lastActive = Date.now();\n            storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION_CONFIG.STORAGE_KEY, JSON.stringify(session));\n            console.log(\"[Session] Successfully updated lastActive\");\n            return true;\n        } catch (error) {\n            console.error(\"[Session] Failed to update lastActive:\", error);\n            return false;\n        }\n    }, false);\n}\nfunction generateSessionId() {\n    return \"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L3Nlc3Npb24tbWFuYWdlci50cz8xMzNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYXZlbFNlc3Npb24gfSBmcm9tICcuLi9tYW5hZ2Vycy90eXBlcyc7XG5pbXBvcnQgeyBTVEFHRV9MSU1JVFMgfSBmcm9tICcuLi9tYW5hZ2Vycy9zdGFnZS1tYW5hZ2VyJztcblxuZXhwb3J0IGNvbnN0IFNFU1NJT05fQ09ORklHID0ge1xuICBTVE9SQUdFX0tFWTogJ3RyYXZlbF9yaXp6X3Nlc3Npb24nLFxuICBBQlNPTFVURV9USU1FT1VUOiAyNCAqIDYwICogNjAgKiAxMDAwLCAvLyAyNCBob3Vyc1xuICBJTkFDVElWSVRZX1RJTUVPVVQ6IDIgKiA2MCAqIDYwICogMTAwMCwgLy8gMiBob3Vyc1xuICBXQVJOSU5HX0JFRk9SRV9USU1FT1VUOiA1ICogNjAgKiAxMDAwLCAvLyA1IG1pbnV0ZXMgd2FybmluZ1xuICBNQVhfVE9UQUxfSU5QVVRTOiAxNSxcbiAgUEFZTUVOVF9SRUZfS0VZOiAncGF5bWVudF9yZWZlcmVuY2VfaWQnXG59O1xuXG4vLyBTYWZlIHN0b3JhZ2UgYWNjZXNzXG5leHBvcnQgY29uc3QgZ2V0U3RvcmFnZSA9ICgpID0+IHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5zZXNzaW9uU3RvcmFnZTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCBjb25zdCBzdG9yYWdlID0gZ2V0U3RvcmFnZSgpO1xuXG4vLyBBZGQgYXRvbWljIG9wZXJhdGlvbiBsb2NrXG5sZXQgaXNTZXNzaW9uTG9ja2VkID0gZmFsc2U7XG5jb25zdCBzZXNzaW9uTG9ja1RpbWVvdXQgPSAxMDAwOyAvLyAxIHNlY29uZCB0aW1lb3V0XG5cbmZ1bmN0aW9uIGFjcXVpcmVTZXNzaW9uTG9jaygpOiBib29sZWFuIHtcbiAgaWYgKGlzU2Vzc2lvbkxvY2tlZCkgcmV0dXJuIGZhbHNlO1xuICBpc1Nlc3Npb25Mb2NrZWQgPSB0cnVlO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gcmVsZWFzZVNlc3Npb25Mb2NrKCkge1xuICBpc1Nlc3Npb25Mb2NrZWQgPSBmYWxzZTtcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIHNhZmVseSBhY2Nlc3Mgc3RvcmFnZSB3aXRoIGF0b21pYyBndWFyYW50ZWVzXG5leHBvcnQgY29uc3Qgc2FmZVN0b3JhZ2VPcCA9IDxUPihvcGVyYXRpb246ICgpID0+IFQsIGRlZmF1bHRWYWx1ZTogVCk6IFQgPT4ge1xuICB0cnkge1xuICAgIGlmICghc3RvcmFnZSkgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICBcbiAgICAvLyBUcnkgdG8gYWNxdWlyZSBsb2NrXG4gICAgbGV0IGxvY2tBY3F1aXJlZCA9IGZhbHNlO1xuICAgIGxldCBhdHRlbXB0cyA9IDA7XG4gICAgd2hpbGUgKCFsb2NrQWNxdWlyZWQgJiYgYXR0ZW1wdHMgPCA1KSB7XG4gICAgICBsb2NrQWNxdWlyZWQgPSBhY3F1aXJlU2Vzc2lvbkxvY2soKTtcbiAgICAgIGlmICghbG9ja0FjcXVpcmVkKSB7XG4gICAgICAgIGF0dGVtcHRzKys7XG4gICAgICAgIC8vIFdhaXQgYSBiaXQgYmVmb3JlIHRyeWluZyBhZ2FpblxuICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTApKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgaWYgKCFsb2NrQWNxdWlyZWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tTZXNzaW9uXSBGYWlsZWQgdG8gYWNxdWlyZSBsb2NrIGFmdGVyIDUgYXR0ZW1wdHMnKTtcbiAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgfVxuICAgIFxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gb3BlcmF0aW9uKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHJlbGVhc2VTZXNzaW9uTG9jaygpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdbU2Vzc2lvbl0gU3RvcmFnZSBvcGVyYXRpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICByZWxlYXNlU2Vzc2lvbkxvY2soKTtcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9XG59O1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gc2FmZWx5IGFjY2VzcyBzdG9yYWdlXG4vLyBleHBvcnQgY29uc3Qgc2FmZVN0b3JhZ2VPcCA9IDxUPihvcGVyYXRpb246ICgpID0+IFQsIGRlZmF1bHRWYWx1ZTogVCk6IFQgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIGlmICghc3RvcmFnZSkgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbi8vICAgICByZXR1cm4gb3BlcmF0aW9uKCk7XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgY29uc29sZS5lcnJvcignW1Nlc3Npb25dIFN0b3JhZ2Ugb3BlcmF0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4vLyAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbi8vICAgfVxuLy8gfTtcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemVTZXNzaW9uKCk6IFRyYXZlbFNlc3Npb24ge1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBcbiAgLy8gVHJ5IHRvIGdldCBleGlzdGluZyBzZXNzaW9uIGZpcnN0XG4gIGNvbnN0IGV4aXN0aW5nU2Vzc2lvbiA9IHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlZCA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVkpO1xuICAgIHJldHVybiBzdG9yZWQgPyBKU09OLnBhcnNlKHN0b3JlZCkgYXMgVHJhdmVsU2Vzc2lvbiA6IG51bGw7XG4gIH0sIG51bGwpO1xuXG4gIGlmIChleGlzdGluZ1Nlc3Npb24pIHtcbiAgICAvLyBVcGRhdGUgYm90aCBsYXN0QWN0aXZlIGFuZCBleHBpcmVzQXRcbiAgICBleGlzdGluZ1Nlc3Npb24ubGFzdEFjdGl2ZSA9IG5vdztcbiAgICBleGlzdGluZ1Nlc3Npb24uZXhwaXJlc0F0ID0gbm93ICsgU0VTU0lPTl9DT05GSUcuQUJTT0xVVEVfVElNRU9VVDtcbiAgICAvLyBFbnN1cmUgYWxsIHN0YWdlcyBhcmUgaW5pdGlhbGl6ZWRcbiAgICBleGlzdGluZ1Nlc3Npb24uc3RhZ2VQcm9tcHRzID0gZXhpc3RpbmdTZXNzaW9uLnN0YWdlUHJvbXB0cyB8fCB7IDE6IDAsIDI6IDAsIDM6IDAsIDQ6IDAsIDU6IDAgfTtcbiAgICBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICAgIHN0b3JhZ2U/LnNldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KGV4aXN0aW5nU2Vzc2lvbikpO1xuICAgIH0sIHVuZGVmaW5lZCk7XG4gICAgcmV0dXJuIGV4aXN0aW5nU2Vzc2lvbjtcbiAgfVxuXG4gIC8vIENyZWF0ZSBuZXcgc2Vzc2lvbiBpZiBub25lIGV4aXN0c1xuICBjb25zdCBzZXNzaW9uSWQgPSBnZW5lcmF0ZVNlc3Npb25JZCgpO1xuICBjb25zdCBzZXNzaW9uOiBUcmF2ZWxTZXNzaW9uID0ge1xuICAgIC8vIFNlc3Npb24gaW5mb1xuICAgIHNlc3Npb25JZCxcbiAgICBzdGFydFRpbWU6IG5vdyxcbiAgICBsYXN0QWN0aXZlOiBub3csXG4gICAgZXhwaXJlc0F0OiBub3cgKyBTRVNTSU9OX0NPTkZJRy5BQlNPTFVURV9USU1FT1VULFxuXG4gICAgLy8gVHJhdmVsIGRldGFpbHNcbiAgICBkZXN0aW5hdGlvbjogJycsXG4gICAgc3RhcnREYXRlOiAnJyxcbiAgICBlbmREYXRlOiAnJyxcbiAgICBwcmVmZXJlbmNlczogW10sXG4gICAgYnVkZ2V0OiAnJyxcbiAgICBsYW5ndWFnZTogJycsXG4gICAgdHJhbnNwb3J0OiBbXSxcblxuICAgIC8vIFBsYWNlc1xuICAgIHNhdmVkUGxhY2VzOiBbXSxcbiAgICBjdXJyZW50U3RhZ2U6IDEsXG5cbiAgICAvLyBNZXRyaWNzXG4gICAgdG90YWxQcm9tcHRzOiAwLFxuICAgIHN0YWdlUHJvbXB0czogeyAxOiAwLCAyOiAwLCAzOiAwLCA0OiAwLCA1OiAwIH0sXG4gICAgc2F2ZWRQbGFjZXNDb3VudDogMCxcblxuICAgIC8vIFBheW1lbnRcbiAgICBpc1BhaWQ6IGZhbHNlLFxuICAgIHBheW1lbnRSZWZlcmVuY2U6IGBzZXNzaW9uXyR7c2Vzc2lvbklkfWBcbiAgfTtcblxuICBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBzdG9yYWdlPy5zZXRJdGVtKFNFU1NJT05fQ09ORklHLlNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShzZXNzaW9uKSk7XG4gIH0sIHVuZGVmaW5lZCk7XG4gIHJldHVybiBzZXNzaW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RvcmVkU2Vzc2lvbigpOiBUcmF2ZWxTZXNzaW9uIHwgbnVsbCB7XG4gIHJldHVybiBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIEF0dGVtcHRpbmcgdG8gZ2V0IHN0b3JlZCBzZXNzaW9uJyk7XG4gICAgY29uc3Qgc3RvcmVkRGF0YSA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVkpO1xuICAgIGlmICghc3RvcmVkRGF0YSkge1xuICAgICAgY29uc29sZS5sb2coJ1tTZXNzaW9uXSBObyBzdG9yZWQgc2Vzc2lvbiBkYXRhIGZvdW5kJyk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2Vzc2lvbiA9IEpTT04ucGFyc2Uoc3RvcmVkRGF0YSk7XG4gICAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIFN1Y2Nlc3NmdWxseSBwYXJzZWQgc2Vzc2lvbjonLCB7XG4gICAgICAgIHNlc3Npb25JZDogc2Vzc2lvbi5zZXNzaW9uSWQsXG4gICAgICAgIGRlc3RpbmF0aW9uOiBzZXNzaW9uLmRlc3RpbmF0aW9uLFxuICAgICAgICBzdGFydFRpbWU6IG5ldyBEYXRlKHNlc3Npb24uc3RhcnRUaW1lKS50b0lTT1N0cmluZygpLFxuICAgICAgICBsYXN0QWN0aXZlOiBuZXcgRGF0ZShzZXNzaW9uLmxhc3RBY3RpdmUpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoc2Vzc2lvbi5leHBpcmVzQXQpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tTZXNzaW9uXSBGYWlsZWQgdG8gcGFyc2Ugc2Vzc2lvbiBkYXRhOicsIGVycm9yKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSwgbnVsbCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdG9yZWRNZXRyaWNzKCkge1xuICByZXR1cm4gc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGdldFN0b3JlZFNlc3Npb24oKTtcbiAgICBpZiAoIXNlc3Npb24pIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGludGVyYWN0aW9uOiB7XG4gICAgICAgIHRvdGFsUHJvbXB0czogc2Vzc2lvbi50b3RhbFByb21wdHMsXG4gICAgICAgIHN0YWdlUHJvbXB0czogc2Vzc2lvbi5zdGFnZVByb21wdHMsXG4gICAgICAgIGxhc3RBY3RpdmU6IHNlc3Npb24ubGFzdEFjdGl2ZVxuICAgICAgfSxcbiAgICAgIHBsYWNlczoge1xuICAgICAgICBzYXZlZENvdW50OiBzZXNzaW9uLnNhdmVkUGxhY2VzQ291bnRcbiAgICAgIH0sXG4gICAgICBwYXltZW50OiB7XG4gICAgICAgIHN0YXR1czogc2Vzc2lvbi5pc1BhaWQsXG4gICAgICAgIHJlZmVyZW5jZTogc2Vzc2lvbi5wYXltZW50UmVmZXJlbmNlLFxuICAgICAgICB0aW1lc3RhbXA6IHNlc3Npb24ucGF5bWVudFRpbWVzdGFtcFxuICAgICAgfSxcbiAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgZGVzdGluYXRpb246IHNlc3Npb24uZGVzdGluYXRpb24sXG4gICAgICAgIGRhdGVzOiB7XG4gICAgICAgICAgc3RhcnQ6IHNlc3Npb24uc3RhcnREYXRlLFxuICAgICAgICAgIGVuZDogc2Vzc2lvbi5lbmREYXRlXG4gICAgICAgIH0sXG4gICAgICAgIHByZWZlcmVuY2VzOiBzZXNzaW9uLnByZWZlcmVuY2VzLFxuICAgICAgICBidWRnZXQ6IHNlc3Npb24uYnVkZ2V0LFxuICAgICAgICBsYW5ndWFnZTogc2Vzc2lvbi5sYW5ndWFnZSxcbiAgICAgICAgdHJhbnNwb3J0OiBzZXNzaW9uLnRyYW5zcG9ydFxuICAgICAgfVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlU3RvcmVkTWV0cmljcyhcbiAgY3VycmVudFN0YWdlOiBudW1iZXIsXG4gIGluY3JlbWVudFByb21wdDogYm9vbGVhbiA9IGZhbHNlLFxuICBpbmNyZW1lbnRTYXZlZFBsYWNlczogYm9vbGVhbiA9IGZhbHNlXG4pOiBUcmF2ZWxTZXNzaW9uIHtcbiAgcmV0dXJuIHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIGNvbnN0IHNlc3Npb24gPSBnZXRTdG9yZWRTZXNzaW9uKCkgfHwgaW5pdGlhbGl6ZVNlc3Npb24oKTtcblxuICAgIGlmIChpbmNyZW1lbnRQcm9tcHQpIHtcbiAgICAgIGNvbnN0IHsgd2l0aGluU3RhZ2VMaW1pdCB9ID0gY2hlY2tJbnB1dExpbWl0cyhjdXJyZW50U3RhZ2UpO1xuICAgICAgaWYgKHdpdGhpblN0YWdlTGltaXQpIHtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBzdGFnZVByb21wdHMgd2l0aCBhbGwgc3RhZ2VzIGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiAgICAgICAgaWYgKCFzZXNzaW9uLnN0YWdlUHJvbXB0cykge1xuICAgICAgICAgIHNlc3Npb24uc3RhZ2VQcm9tcHRzID0geyAxOiAwLCAyOiAwLCAzOiAwLCA0OiAwLCA1OiAwIH07XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEVuc3VyZSBhbGwgc3RhZ2VzIGV4aXN0XG4gICAgICAgIGZvciAobGV0IHN0YWdlID0gMTsgc3RhZ2UgPD0gNTsgc3RhZ2UrKykge1xuICAgICAgICAgIGlmICh0eXBlb2Ygc2Vzc2lvbi5zdGFnZVByb21wdHNbc3RhZ2VdICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgc2Vzc2lvbi5zdGFnZVByb21wdHNbc3RhZ2VdID0gMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzZXNzaW9uLnRvdGFsUHJvbXB0cyA9IChzZXNzaW9uLnRvdGFsUHJvbXB0cyB8fCAwKSArIDE7XG4gICAgICAgIHNlc3Npb24uc3RhZ2VQcm9tcHRzW2N1cnJlbnRTdGFnZV0gPSAoc2Vzc2lvbi5zdGFnZVByb21wdHNbY3VycmVudFN0YWdlXSB8fCAwKSArIDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGluY3JlbWVudFNhdmVkUGxhY2VzKSB7XG4gICAgICBzZXNzaW9uLnNhdmVkUGxhY2VzQ291bnQgPSAoc2Vzc2lvbi5zYXZlZFBsYWNlc0NvdW50IHx8IDApICsgMTtcbiAgICB9XG5cbiAgICBzdG9yYWdlPy5zZXRJdGVtKFNFU1NJT05fQ09ORklHLlNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShzZXNzaW9uKSk7XG4gICAgcmV0dXJuIHNlc3Npb247XG4gIH0sIG51bGwpIHx8IGluaXRpYWxpemVTZXNzaW9uKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0lucHV0TGltaXRzKGN1cnJlbnRTdGFnZTogbnVtYmVyKToge1xuICB3aXRoaW5TdGFnZUxpbWl0OiBib29sZWFuO1xuICB3aXRoaW5Ub3RhbExpbWl0OiBib29sZWFuO1xuICBzdGFnZUlucHV0Q291bnQ6IG51bWJlcjtcbiAgdG90YWxJbnB1dENvdW50OiBudW1iZXI7XG59IHtcbiAgcmV0dXJuIHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIGNvbnN0IHNlc3Npb24gPSBnZXRTdG9yZWRTZXNzaW9uKCkgfHwgaW5pdGlhbGl6ZVNlc3Npb24oKTtcbiAgICBjb25zdCBzdGFnZVByb21wdHMgPSBzZXNzaW9uLnN0YWdlUHJvbXB0cyB8fCB7IDE6IDAsIDI6IDAsIDM6IDAgfTtcbiAgICBjb25zdCB0b3RhbFByb21wdHMgPSBzZXNzaW9uLnRvdGFsUHJvbXB0cyB8fCAwO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHdpdGhpblN0YWdlTGltaXQ6IGN1cnJlbnRTdGFnZSA9PT0gM1xuICAgICAgICA/IChzdGFnZVByb21wdHNbY3VycmVudFN0YWdlXSB8fCAwKSA8IFNUQUdFX0xJTUlUU1szXS5tYXhQcm9tcHRzXG4gICAgICAgIDogdHJ1ZSxcbiAgICAgIHdpdGhpblRvdGFsTGltaXQ6IGN1cnJlbnRTdGFnZSA9PT0gM1xuICAgICAgICA/IHRvdGFsUHJvbXB0cyA8IFNFU1NJT05fQ09ORklHLk1BWF9UT1RBTF9JTlBVVFNcbiAgICAgICAgOiB0cnVlLFxuICAgICAgc3RhZ2VJbnB1dENvdW50OiBzdGFnZVByb21wdHNbY3VycmVudFN0YWdlXSB8fCAwLFxuICAgICAgdG90YWxJbnB1dENvdW50OiB0b3RhbFByb21wdHNcbiAgICB9O1xuICB9LCB7XG4gICAgd2l0aGluU3RhZ2VMaW1pdDogdHJ1ZSxcbiAgICB3aXRoaW5Ub3RhbExpbWl0OiB0cnVlLFxuICAgIHN0YWdlSW5wdXRDb3VudDogMCxcbiAgICB0b3RhbElucHV0Q291bnQ6IDBcbiAgfSk7XG59XG5cbi8vIFBheW1lbnQgcmVsYXRlZCBmdW5jdGlvbnNcbmV4cG9ydCBmdW5jdGlvbiBzZXRQYXltZW50U3RhdHVzKGlzUGFpZDogYm9vbGVhbik6IHZvaWQge1xuICBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBjb25zdCBzZXNzaW9uID0gZ2V0U3RvcmVkU2Vzc2lvbigpIHx8IGluaXRpYWxpemVTZXNzaW9uKCk7XG4gICAgc2Vzc2lvbi5pc1BhaWQgPSBpc1BhaWQ7XG4gICAgc2Vzc2lvbi5wYXltZW50VGltZXN0YW1wID0gaXNQYWlkID8gRGF0ZS5ub3coKSA6IHVuZGVmaW5lZDtcbiAgICBzdG9yYWdlPy5zZXRJdGVtKFNFU1NJT05fQ09ORklHLlNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShzZXNzaW9uKSk7XG4gIH0sIHVuZGVmaW5lZCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXltZW50U3RhdHVzKCk6IGJvb2xlYW4ge1xuICByZXR1cm4gc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGdldFN0b3JlZFNlc3Npb24oKTtcbiAgICByZXR1cm4gc2Vzc2lvbj8uaXNQYWlkIHx8IGZhbHNlO1xuICB9LCBmYWxzZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRQYXltZW50UmVmZXJlbmNlKHJlZmVyZW5jZTogc3RyaW5nKTogdm9pZCB7XG4gIHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIGNvbnN0IHNlc3Npb24gPSBnZXRTdG9yZWRTZXNzaW9uKCkgfHwgaW5pdGlhbGl6ZVNlc3Npb24oKTtcbiAgICBzZXNzaW9uLnBheW1lbnRSZWZlcmVuY2UgPSByZWZlcmVuY2U7XG4gICAgc3RvcmFnZT8uc2V0SXRlbShTRVNTSU9OX0NPTkZJRy5TVE9SQUdFX0tFWSwgSlNPTi5zdHJpbmdpZnkoc2Vzc2lvbikpO1xuICB9LCB1bmRlZmluZWQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGF5bWVudFJlZmVyZW5jZSgpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGdldFN0b3JlZFNlc3Npb24oKTtcbiAgICByZXR1cm4gc2Vzc2lvbj8ucGF5bWVudFJlZmVyZW5jZTtcbiAgfSwgdW5kZWZpbmVkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyUGF5bWVudFJlZmVyZW5jZSgpOiB2b2lkIHtcbiAgc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGdldFN0b3JlZFNlc3Npb24oKSB8fCBpbml0aWFsaXplU2Vzc2lvbigpO1xuICAgIHNlc3Npb24ucGF5bWVudFJlZmVyZW5jZSA9ICcnO1xuICAgIHN0b3JhZ2U/LnNldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHNlc3Npb24pKTtcbiAgfSwgdW5kZWZpbmVkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBheW1lbnRSZWZlcmVuY2VJZCgpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlZCA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTl9DT05GSUcuUEFZTUVOVF9SRUZfS0VZKTtcbiAgICByZXR1cm4gc3RvcmVkIHx8IG51bGw7XG4gIH0sIG51bGwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0UGF5bWVudFJlZmVyZW5jZUlkKHJlZmVyZW5jZUlkOiBzdHJpbmcpIHtcbiAgc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgc3RvcmFnZT8uc2V0SXRlbShTRVNTSU9OX0NPTkZJRy5QQVlNRU5UX1JFRl9LRVksIHJlZmVyZW5jZUlkKTtcbiAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIFN0b3JlZCBwYXltZW50IHJlZmVyZW5jZSBJRDonLCByZWZlcmVuY2VJZCk7XG4gIH0sIHVuZGVmaW5lZCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Nlc3Npb24oKTogYm9vbGVhbiB7XG4gIHJldHVybiBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50U2Vzc2lvbiA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVkpO1xuXG4gICAgaWYgKCFjdXJyZW50U2Vzc2lvbikge1xuICAgICAgY29uc3QgbmV3U2Vzc2lvbiA9IERhdGUubm93KCkudG9TdHJpbmcoKTtcbiAgICAgIHN0b3JhZ2U/LnNldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVksIG5ld1Nlc3Npb24pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSwgZmFsc2UpO1xufVxuXG4vLyBBZGQgd2FybmluZyBtZWNoYW5pc21cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Nlc3Npb25XaXRoV2FybmluZygpOiB7IGlzVmFsaWQ6IGJvb2xlYW47IHNob3VsZFdhcm46IGJvb2xlYW4gfSB7XG4gIHJldHVybiBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBjb25zdCBzZXNzaW9uID0gZ2V0U3RvcmVkU2Vzc2lvbigpO1xuICAgIGlmICghc2Vzc2lvbikge1xuICAgICAgcmV0dXJuIHsgaXNWYWxpZDogZmFsc2UsIHNob3VsZFdhcm46IGZhbHNlIH07XG4gICAgfVxuXG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCB0aW1lTGVmdCA9IHNlc3Npb24uZXhwaXJlc0F0IC0gbm93O1xuICAgIGNvbnN0IHNob3VsZFdhcm4gPSB0aW1lTGVmdCA8PSBTRVNTSU9OX0NPTkZJRy5XQVJOSU5HX0JFRk9SRV9USU1FT1VUO1xuICAgIGNvbnN0IGlzVmFsaWQgPSB0aW1lTGVmdCA+IDA7XG5cbiAgICByZXR1cm4geyBpc1ZhbGlkLCBzaG91bGRXYXJuIH07XG4gIH0sIHsgaXNWYWxpZDogZmFsc2UsIHNob3VsZFdhcm46IGZhbHNlIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tTZXNzaW9uVmFsaWRpdHkoKTogYm9vbGVhbiB7XG4gIHJldHVybiBzYWZlU3RvcmFnZU9wKCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIENoZWNraW5nIHNlc3Npb24gdmFsaWRpdHknKTtcbiAgICBjb25zdCBzdG9yZWREYXRhID0gc3RvcmFnZT8uZ2V0SXRlbShTRVNTSU9OX0NPTkZJRy5TVE9SQUdFX0tFWSk7XG4gICAgaWYgKCFzdG9yZWREYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIE5vIHNlc3Npb24gZm91bmQgZHVyaW5nIHZhbGlkaXR5IGNoZWNrJyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgbGV0IHNlc3Npb247XG4gICAgdHJ5IHtcbiAgICAgIHNlc3Npb24gPSBKU09OLnBhcnNlKHN0b3JlZERhdGEpO1xuICAgICAgY29uc29sZS5sb2coJ1tTZXNzaW9uXSBQYXJzZWQgc2Vzc2lvbiBmb3IgdmFsaWRpdHkgY2hlY2s6Jywge1xuICAgICAgICBzZXNzaW9uSWQ6IHNlc3Npb24uc2Vzc2lvbklkLFxuICAgICAgICBkZXN0aW5hdGlvbjogc2Vzc2lvbi5kZXN0aW5hdGlvbixcbiAgICAgICAgc3RhcnRUaW1lOiBuZXcgRGF0ZShzZXNzaW9uLnN0YXJ0VGltZSkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgbGFzdEFjdGl2ZTogbmV3IERhdGUoc2Vzc2lvbi5sYXN0QWN0aXZlKS50b0lTT1N0cmluZygpLFxuICAgICAgICBleHBpcmVzQXQ6IG5ldyBEYXRlKHNlc3Npb24uZXhwaXJlc0F0KS50b0lTT1N0cmluZygpXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignW1Nlc3Npb25dIEZhaWxlZCB0byBwYXJzZSBzZXNzaW9uIGR1cmluZyB2YWxpZGl0eSBjaGVjazonLCBlcnJvcik7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIFZhbGlkaXR5IGNoZWNrIHRpbWVzOicsIHtcbiAgICAgIG5vdzogbmV3IERhdGUobm93KS50b0lTT1N0cmluZygpLFxuICAgICAgZXhwaXJlc0F0OiBuZXcgRGF0ZShzZXNzaW9uLmV4cGlyZXNBdCkudG9JU09TdHJpbmcoKSxcbiAgICAgIGxhc3RBY3RpdmU6IG5ldyBEYXRlKHNlc3Npb24ubGFzdEFjdGl2ZSkudG9JU09TdHJpbmcoKSxcbiAgICAgIHRpbWVUaWxsRXhwaXJ5OiBzZXNzaW9uLmV4cGlyZXNBdCAtIG5vdyxcbiAgICAgIGluYWN0aXZlVGltZTogbm93IC0gc2Vzc2lvbi5sYXN0QWN0aXZlLFxuICAgICAgYWJzb2x1dGVUaW1lb3V0OiBTRVNTSU9OX0NPTkZJRy5BQlNPTFVURV9USU1FT1VULFxuICAgICAgaW5hY3Rpdml0eVRpbWVvdXQ6IFNFU1NJT05fQ09ORklHLklOQUNUSVZJVFlfVElNRU9VVFxuICAgIH0pO1xuXG4gICAgLy8gQ2hlY2sgYWJzb2x1dGUgdGltZW91dFxuICAgIGlmIChub3cgPj0gc2Vzc2lvbi5leHBpcmVzQXQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbU2Vzc2lvbl0gU2Vzc2lvbiBleHBpcmVkIGR1ZSB0byBhYnNvbHV0ZSB0aW1lb3V0LiBUaW1lczonLCB7XG4gICAgICAgIG5vdyxcbiAgICAgICAgZXhwaXJlc0F0OiBzZXNzaW9uLmV4cGlyZXNBdCxcbiAgICAgICAgZGlmZjogbm93IC0gc2Vzc2lvbi5leHBpcmVzQXRcbiAgICAgIH0pO1xuICAgICAgY2xlYXJTZXNzaW9uKCk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaW5hY3Rpdml0eSB0aW1lb3V0XG4gICAgY29uc3QgaW5hY3RpdmVUaW1lID0gbm93IC0gc2Vzc2lvbi5sYXN0QWN0aXZlO1xuICAgIGlmIChpbmFjdGl2ZVRpbWUgPj0gU0VTU0lPTl9DT05GSUcuSU5BQ1RJVklUWV9USU1FT1VUKSB7XG4gICAgICBjb25zb2xlLmxvZygnW1Nlc3Npb25dIFNlc3Npb24gZXhwaXJlZCBkdWUgdG8gaW5hY3Rpdml0eS4gVGltZXM6Jywge1xuICAgICAgICBub3csXG4gICAgICAgIGxhc3RBY3RpdmU6IHNlc3Npb24ubGFzdEFjdGl2ZSxcbiAgICAgICAgaW5hY3RpdmVUaW1lLFxuICAgICAgICBpbmFjdGl2aXR5VGltZW91dDogU0VTU0lPTl9DT05GSUcuSU5BQ1RJVklUWV9USU1FT1VUXG4gICAgICB9KTtcbiAgICAgIGNsZWFyU2Vzc2lvbigpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIE9ubHkgdXBkYXRlIGxhc3RBY3RpdmUgaWYgaXQncyBiZWVuIG1vcmUgdGhhbiAxIG1pbnV0ZVxuICAgIGlmIChpbmFjdGl2ZVRpbWUgPiA2MDAwMCkgeyAvLyAxIG1pbnV0ZVxuICAgICAgY29uc29sZS5sb2coJ1tTZXNzaW9uXSBVcGRhdGluZyBsYXN0QWN0aXZlIHRpbWUgaW4gdmFsaWRpdHkgY2hlY2snKTtcbiAgICAgIHNlc3Npb24ubGFzdEFjdGl2ZSA9IG5vdztcbiAgICAgIHN0b3JhZ2U/LnNldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHNlc3Npb24pKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRydWU7XG4gIH0sIGZhbHNlKTtcbn1cblxuLy8gU2Vzc2lvbiBleHBpcnkgaGFuZGxlclxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVNlc3Npb25FeHBpcnkoKSB7XG4gIHNhZmVTdG9yYWdlT3AoKCkgPT4ge1xuICAgIC8vIERvbid0IGhhbmRsZSBleHBpcnkgaWYgd2UncmUgYWxyZWFkeSBvbiB0aGUgbGFuZGluZyBwYWdlXG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSA9PT0gJy8nIHx8IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSA9PT0gJycpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTYXZlIGN1cnJlbnQgc3RhdGUgaWYgbmVlZGVkXG4gICAgY29uc3QgY3VycmVudFN0YXRlID0ge1xuICAgICAgbWVzc2FnZXM6IHdpbmRvdy5nZXRTYXZlZFBsYWNlcz8uKCkgfHwgW10sXG4gICAgICBsYXN0VXJsOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWVcbiAgICB9O1xuICAgIHN0b3JhZ2U/LnNldEl0ZW0oJ2V4cGlyZWRTZXNzaW9uU3RhdGUnLCBKU09OLnN0cmluZ2lmeShjdXJyZW50U3RhdGUpKTtcblxuICAgIC8vIENsZWFyIHNlc3Npb25cbiAgICBjbGVhclNlc3Npb24oKTtcblxuICAgIC8vIE9ubHkgcmVkaXJlY3QgaWYgd2UncmUgbm90IGFscmVhZHkgb24gdGhlIGxhbmRpbmcgcGFnZVxuICAgIGNvbnN0IGN1cnJlbnRVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICBpZiAoIWN1cnJlbnRVcmwuc2VhcmNoUGFyYW1zLmhhcygncmV0dXJuJykpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYC8/cmV0dXJuPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGN1cnJlbnRTdGF0ZS5sYXN0VXJsKX1gO1xuICAgIH1cbiAgfSwgdW5kZWZpbmVkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyU2Vzc2lvbigpIHtcbiAgY29uc29sZS5sb2coJ1tTZXNzaW9uXSBDbGVhcmluZyBzZXNzaW9uIHN0b3JhZ2UnKTtcbiAgc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgc3RvcmFnZT8ucmVtb3ZlSXRlbShTRVNTSU9OX0NPTkZJRy5TVE9SQUdFX0tFWSk7XG4gIH0sIHVuZGVmaW5lZCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVMYXN0QWN0aXZlKCkge1xuICByZXR1cm4gc2FmZVN0b3JhZ2VPcCgoKSA9PiB7XG4gICAgY29uc3Qgc3RvcmVkRGF0YSA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVkpO1xuICAgIGlmICghc3RvcmVkRGF0YSkge1xuICAgICAgY29uc29sZS5sb2coJ1tTZXNzaW9uXSBObyBzZXNzaW9uIHRvIHVwZGF0ZSBsYXN0QWN0aXZlJyk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNlc3Npb24gPSBKU09OLnBhcnNlKHN0b3JlZERhdGEpO1xuICAgICAgc2Vzc2lvbi5sYXN0QWN0aXZlID0gRGF0ZS5ub3coKTtcbiAgICAgIHN0b3JhZ2U/LnNldEl0ZW0oU0VTU0lPTl9DT05GSUcuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHNlc3Npb24pKTtcbiAgICAgIGNvbnNvbGUubG9nKCdbU2Vzc2lvbl0gU3VjY2Vzc2Z1bGx5IHVwZGF0ZWQgbGFzdEFjdGl2ZScpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tTZXNzaW9uXSBGYWlsZWQgdG8gdXBkYXRlIGxhc3RBY3RpdmU6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSwgZmFsc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTZXNzaW9uSWQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAke0RhdGUubm93KCl9LSR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpfWA7XG59XG4iXSwibmFtZXMiOlsiU1RBR0VfTElNSVRTIiwiU0VTU0lPTl9DT05GSUciLCJTVE9SQUdFX0tFWSIsIkFCU09MVVRFX1RJTUVPVVQiLCJJTkFDVElWSVRZX1RJTUVPVVQiLCJXQVJOSU5HX0JFRk9SRV9USU1FT1VUIiwiTUFYX1RPVEFMX0lOUFVUUyIsIlBBWU1FTlRfUkVGX0tFWSIsImdldFN0b3JhZ2UiLCJ3aW5kb3ciLCJzZXNzaW9uU3RvcmFnZSIsInN0b3JhZ2UiLCJpc1Nlc3Npb25Mb2NrZWQiLCJzZXNzaW9uTG9ja1RpbWVvdXQiLCJhY3F1aXJlU2Vzc2lvbkxvY2siLCJyZWxlYXNlU2Vzc2lvbkxvY2siLCJzYWZlU3RvcmFnZU9wIiwib3BlcmF0aW9uIiwiZGVmYXVsdFZhbHVlIiwibG9ja0FjcXVpcmVkIiwiYXR0ZW1wdHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJjb25zb2xlIiwiZXJyb3IiLCJpbml0aWFsaXplU2Vzc2lvbiIsIm5vdyIsIkRhdGUiLCJleGlzdGluZ1Nlc3Npb24iLCJzdG9yZWQiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwibGFzdEFjdGl2ZSIsImV4cGlyZXNBdCIsInN0YWdlUHJvbXB0cyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJ1bmRlZmluZWQiLCJzZXNzaW9uSWQiLCJnZW5lcmF0ZVNlc3Npb25JZCIsInNlc3Npb24iLCJzdGFydFRpbWUiLCJkZXN0aW5hdGlvbiIsInN0YXJ0RGF0ZSIsImVuZERhdGUiLCJwcmVmZXJlbmNlcyIsImJ1ZGdldCIsImxhbmd1YWdlIiwidHJhbnNwb3J0Iiwic2F2ZWRQbGFjZXMiLCJjdXJyZW50U3RhZ2UiLCJ0b3RhbFByb21wdHMiLCJzYXZlZFBsYWNlc0NvdW50IiwiaXNQYWlkIiwicGF5bWVudFJlZmVyZW5jZSIsImdldFN0b3JlZFNlc3Npb24iLCJsb2ciLCJzdG9yZWREYXRhIiwidG9JU09TdHJpbmciLCJnZXRTdG9yZWRNZXRyaWNzIiwiaW50ZXJhY3Rpb24iLCJwbGFjZXMiLCJzYXZlZENvdW50IiwicGF5bWVudCIsInN0YXR1cyIsInJlZmVyZW5jZSIsInRpbWVzdGFtcCIsInBheW1lbnRUaW1lc3RhbXAiLCJwYXJhbWV0ZXJzIiwiZGF0ZXMiLCJzdGFydCIsImVuZCIsInVwZGF0ZVN0b3JlZE1ldHJpY3MiLCJpbmNyZW1lbnRQcm9tcHQiLCJpbmNyZW1lbnRTYXZlZFBsYWNlcyIsIndpdGhpblN0YWdlTGltaXQiLCJjaGVja0lucHV0TGltaXRzIiwic3RhZ2UiLCJtYXhQcm9tcHRzIiwid2l0aGluVG90YWxMaW1pdCIsInN0YWdlSW5wdXRDb3VudCIsInRvdGFsSW5wdXRDb3VudCIsInNldFBheW1lbnRTdGF0dXMiLCJnZXRQYXltZW50U3RhdHVzIiwic2V0UGF5bWVudFJlZmVyZW5jZSIsImdldFBheW1lbnRSZWZlcmVuY2UiLCJjbGVhclBheW1lbnRSZWZlcmVuY2UiLCJnZXRQYXltZW50UmVmZXJlbmNlSWQiLCJzZXRQYXltZW50UmVmZXJlbmNlSWQiLCJyZWZlcmVuY2VJZCIsImNoZWNrU2Vzc2lvbiIsImN1cnJlbnRTZXNzaW9uIiwibmV3U2Vzc2lvbiIsInRvU3RyaW5nIiwiY2hlY2tTZXNzaW9uV2l0aFdhcm5pbmciLCJpc1ZhbGlkIiwic2hvdWxkV2FybiIsInRpbWVMZWZ0IiwiY2hlY2tTZXNzaW9uVmFsaWRpdHkiLCJ0aW1lVGlsbEV4cGlyeSIsImluYWN0aXZlVGltZSIsImFic29sdXRlVGltZW91dCIsImluYWN0aXZpdHlUaW1lb3V0IiwiZGlmZiIsImNsZWFyU2Vzc2lvbiIsImhhbmRsZVNlc3Npb25FeHBpcnkiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiY3VycmVudFN0YXRlIiwibWVzc2FnZXMiLCJnZXRTYXZlZFBsYWNlcyIsImxhc3RVcmwiLCJjdXJyZW50VXJsIiwiVVJMIiwiaHJlZiIsInNlYXJjaFBhcmFtcyIsImhhcyIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlbW92ZUl0ZW0iLCJ1cGRhdGVMYXN0QWN0aXZlIiwiTWF0aCIsInJhbmRvbSIsInN1YnN0ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/session-manager.ts\n"));

/***/ })

});