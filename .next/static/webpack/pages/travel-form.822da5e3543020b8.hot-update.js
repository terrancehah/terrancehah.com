"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/travel-form",{

/***/ "./managers/stage-manager.ts":
/*!***********************************!*\
  !*** ./managers/stage-manager.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STAGE_LIMITS: function() { return /* binding */ STAGE_LIMITS; },\n/* harmony export */   validateStageProgression: function() { return /* binding */ validateStageProgression; }\n/* harmony export */ });\n/* harmony import */ var _utils_session_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/session-manager */ \"./utils/session-manager.ts\");\n\n// Validation functions for each stage\nconst STAGE_LIMITS = {\n    3: {\n        maxPrompts: 5,\n        upgradeMessage: \"I'm sorry to tell you that you have reached the prompts limit in the free version. \\n    Would you like to upgrade to unlock unlimited places browsing and premium features? \\n    This will give you access to personalized recommendations, detailed scheduling, and local insights.\"\n    }\n};\nconst STAGE_VALIDATORS = {\n    // Stage 1: Initial Parameter Check\n    1: {\n        validate: (details)=>{\n            var _details_preferences;\n            const missingRequirements = [];\n            if (!details.destination) missingRequirements.push(\"destination\");\n            if (!details.startDate) missingRequirements.push(\"start date\");\n            if (!details.endDate) missingRequirements.push(\"end date\");\n            if (!((_details_preferences = details.preferences) === null || _details_preferences === void 0 ? void 0 : _details_preferences.length)) missingRequirements.push(\"preferences\");\n            if (!details.language) missingRequirements.push(\"language\");\n            return {\n                isValid: missingRequirements.length === 0,\n                missingRequirements\n            };\n        }\n    },\n    // Stage 2: City Introduction\n    2: {\n        validate: (details, session)=>{\n            return {\n                isValid: true,\n                missingRequirements: []\n            };\n        }\n    },\n    // Stage 3: Places Introduction\n    3: {\n        validate: (details, session)=>{\n            const { totalPrompts, stagePrompts, savedPlaces } = session;\n            const stagePromptCount = (stagePrompts === null || stagePrompts === void 0 ? void 0 : stagePrompts[3]) || 0;\n            const upgradeRequired = !session.isPaid && stagePromptCount >= STAGE_LIMITS[3].maxPrompts;\n            // Check if we have enough places saved\n            const minPlacesRequired = 3;\n            const hasEnoughPlaces = savedPlaces.length >= minPlacesRequired;\n            // Check if we have diverse place types based on preferences\n            const placeTypes = new Set(savedPlaces.map((p)=>p.primaryType));\n            const hasGoodCoverage = placeTypes.size >= Math.min(2, details.preferences.length);\n            const missingRequirements = [];\n            if (!hasEnoughPlaces) {\n                missingRequirements.push(\"at least \".concat(minPlacesRequired, \" places\"));\n            }\n            if (!hasGoodCoverage) {\n                missingRequirements.push(\"more diverse place types\");\n            }\n            return {\n                isValid: !upgradeRequired && hasEnoughPlaces && hasGoodCoverage,\n                missingRequirements,\n                upgradeRequired\n            };\n        }\n    },\n    // Stage 4: Itinerary Review (with payment check)\n    4: {\n        validate: (details, session)=>{\n            const { isPaid, savedPlaces } = session;\n            const missingRequirements = [];\n            // Check payment status\n            if (!isPaid) {\n                missingRequirements.push(\"premium subscription\");\n            }\n            // Check minimum places for a good itinerary\n            const minPlacesForItinerary = 5;\n            if (savedPlaces.length < minPlacesForItinerary) {\n                missingRequirements.push(\"at least \".concat(minPlacesForItinerary, \" places\"));\n            }\n            // Check place type distribution\n            const placeTypes = new Set(savedPlaces.map((p)=>p.primaryType));\n            const minPlaceTypes = Math.min(3, details.preferences.length);\n            if (placeTypes.size < minPlaceTypes) {\n                missingRequirements.push(\"more diverse place types\");\n            }\n            return {\n                isValid: missingRequirements.length === 0,\n                missingRequirements,\n                upgradeRequired: !isPaid\n            };\n        }\n    },\n    // Stage 5: Final Confirmation (keeping it open as requested)\n    5: {\n        validate: (_, session)=>{\n            const isPaid = session.isPaid;\n            return {\n                isValid: isPaid,\n                missingRequirements: isPaid ? [] : [\n                    \"premium subscription\"\n                ],\n                upgradeRequired: !isPaid\n            };\n        }\n    }\n};\n// Main validation function to be used in the chat component\nfunction validateStageProgression(currentStage, nextStage, travelDetails) {\n    let session = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_0__.getStoredSession)();\n    // If no session exists but we have travel details, initialize one\n    if (!session && travelDetails.destination) {\n        session = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_0__.initializeSession)();\n        session.destination = travelDetails.destination;\n        session.startDate = travelDetails.startDate || \"\";\n        session.endDate = travelDetails.endDate || \"\";\n        session.preferences = travelDetails.preferences || [];\n        session.budget = travelDetails.budget || \"\";\n        session.language = travelDetails.language || \"\";\n        session.transport = travelDetails.transport || [];\n        session.currentStage = currentStage;\n    }\n    if (!session) {\n        return {\n            canProgress: false,\n            missingRequirements: [\n                \"valid session\"\n            ]\n        };\n    }\n    // Ensure stage progression is sequential\n    if (nextStage !== currentStage + 1) {\n        return {\n            canProgress: false,\n            missingRequirements: [\n                \"invalid stage progression\"\n            ]\n        };\n    }\n    // Get validator for current stage\n    const validator = STAGE_VALIDATORS[currentStage];\n    if (!validator) {\n        return {\n            canProgress: true,\n            missingRequirements: []\n        };\n    }\n    // Check if current stage requirements are met before progressing\n    const { isValid, missingRequirements, upgradeRequired } = validator.validate(travelDetails, session);\n    // If current stage requirements are met, allow progression\n    if (isValid) {\n        return {\n            canProgress: true,\n            missingRequirements: [],\n            upgradeRequired\n        };\n    }\n    return {\n        canProgress: isValid,\n        missingRequirements,\n        upgradeRequired\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./managers/stage-manager.ts\n"));

/***/ })

});