"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_daily-planner_tsx",{

/***/ "./utils/travel-info-utils.ts":
/*!************************************!*\
  !*** ./utils/travel-info-utils.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   travelInfoManager: function() { return /* binding */ travelInfoManager; }\n/* harmony export */ });\nconst CACHE_KEY = \"travel_info_cache\";\nconst CACHE_DURATION = 24 * 60 * 60 * 1000 // 24 hours\n;\nclass TravelInfoManager {\n    getCacheKey(place1, place2) {\n        // Include day information in cache key\n        if (place1.dayIndex !== place2.dayIndex) {\n            console.warn(\"[TravelInfoManager] Attempting to get travel info for places in different days:\", {\n                place1: {\n                    name: place1.displayName,\n                    day: place1.dayIndex\n                },\n                place2: {\n                    name: place2.displayName,\n                    day: place2.dayIndex\n                }\n            });\n            return \"\"; // Return empty to force skip cache\n        }\n        return \"day\".concat(place1.dayIndex, \"-\").concat(place1.id, \"-\").concat(place2.id);\n    }\n    isCacheValid(info) {\n        return !info.error && Date.now() - info.timestamp < CACHE_DURATION;\n    }\n    async getTravelInfo(place1, place2) {\n        if (!(place1 === null || place1 === void 0 ? void 0 : place1.location) || !(place2 === null || place2 === void 0 ? void 0 : place2.location)) {\n            console.log(\"[TravelInfoManager] Missing location:\", {\n                place1: place1 === null || place1 === void 0 ? void 0 : place1.displayName,\n                place2: place2 === null || place2 === void 0 ? void 0 : place2.displayName\n            });\n            return {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n        }\n        // Skip if places are in different days\n        if (place1.dayIndex !== place2.dayIndex) {\n            console.warn(\"[TravelInfoManager] Cannot get travel info for places in different days\");\n            return {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n        }\n        const key = this.getCacheKey(place1, place2);\n        // Skip cache if key is empty (different days)\n        if (!key) {\n            return {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n        }\n        const cached = this.cache[key];\n        if (cached && this.isCacheValid(cached)) {\n            console.log(\"[TravelInfoManager] Using cached info for:\", {\n                from: place1.displayName,\n                to: place2.displayName\n            });\n            return cached;\n        }\n        try {\n            console.log(\"[TravelInfoManager] Fetching new info for:\", {\n                from: place1.displayName,\n                to: place2.displayName\n            });\n            const response = await fetch(\"/api/travel-info\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    origin: {\n                        location: {\n                            latLng: {\n                                latitude: place1.location.latitude,\n                                longitude: place1.location.longitude\n                            }\n                        }\n                    },\n                    destination: {\n                        location: {\n                            latLng: {\n                                latitude: place2.location.latitude,\n                                longitude: place2.location.longitude\n                            }\n                        }\n                    }\n                })\n            });\n            if (!response.ok) {\n                console.error(\"[TravelInfoManager] API Error:\", response.status);\n                return {\n                    duration: \"--\",\n                    distance: \"--\",\n                    timestamp: Date.now(),\n                    error: true\n                };\n            }\n            const data = await response.json();\n            if (data.error) {\n                console.error(\"[TravelInfoManager] Data Error:\", data.error);\n                return {\n                    duration: \"--\",\n                    distance: \"--\",\n                    timestamp: Date.now(),\n                    error: true\n                };\n            }\n            console.log(\"[TravelInfoManager] Raw API response:\", data);\n            const info = {\n                duration: data.duration || \"--\",\n                distance: data.distance || \"--\",\n                timestamp: Date.now(),\n                polyline: data.polyline,\n                legPolyline: data.legPolyline\n            };\n            // Only cache if we have valid data\n            if (data.duration && data.distance && !data.duration.includes(\"NaN\") && !data.distance.includes(\"NaN\")) {\n                this.cache[key] = info;\n                this.persist();\n            } else {\n                console.error(\"[TravelInfoManager] Invalid data received:\", data);\n            }\n            return info;\n        } catch (error) {\n            console.error(\"[TravelInfoManager] Error:\", error);\n            const errorInfo = {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n            this.cache[key] = errorInfo;\n            return errorInfo;\n        }\n    }\n    persist() {\n        if (true) {\n            try {\n                localStorage.setItem(CACHE_KEY, JSON.stringify(this.cache));\n            } catch (error) {\n                console.error(\"[TravelInfoManager] Cache save error:\", error);\n            }\n        }\n    }\n    clearCache() {\n        this.cache = {};\n        this.persist();\n    }\n    // Add this new method to clear routes for specific places\n    clearRoutesForPlace(place) {\n        // Clear all routes that involve this place\n        Object.keys(this.cache).forEach((key)=>{\n            if (key.includes(place.id)) {\n                delete this.cache[key];\n            }\n        });\n        // Update localStorage\n        if (true) {\n            localStorage.setItem(CACHE_KEY, JSON.stringify(this.cache));\n        }\n    }\n    constructor(){\n        this.cache = {};\n        if (true) {\n            try {\n                const stored = localStorage.getItem(CACHE_KEY);\n                if (stored) {\n                    this.cache = JSON.parse(stored);\n                }\n            } catch (error) {\n                console.error(\"[TravelInfoManager] Cache load error:\", error);\n                this.cache = {};\n            }\n        }\n    }\n}\nconst travelInfoManager = new TravelInfoManager();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxJQUFJO2dCQUNGLE1BQU1pQyxTQUFTVCxhQUFhVSxPQUFPLENBQUM1RDtnQkFDcEMsSUFBSTJELFFBQVE7b0JBQ1YsSUFBSSxDQUFDakMsS0FBSyxHQUFHUSxLQUFLMkIsS0FBSyxDQUFDRjtnQkFDMUI7WUFDRixFQUFFLE9BQU81QyxPQUFPO2dCQUNkUixRQUFRUSxLQUFLLENBQUMseUNBQXlDQTtnQkFDdkQsSUFBSSxDQUFDVyxLQUFLLEdBQUcsQ0FBQztZQUNoQjtRQUNGO0lBQ0Y7QUFnSkY7QUFFTyxNQUFNb0Msb0JBQW9CLElBQUk1RCxvQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvdHJhdmVsLWluZm8tdXRpbHMudHM/YTIyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbGFjZSB9IGZyb20gJy4vcGxhY2VzLXV0aWxzJ1xuXG5pbnRlcmZhY2UgVHJhdmVsSW5mbyB7XG4gIGR1cmF0aW9uOiBzdHJpbmdcbiAgZGlzdGFuY2U6IHN0cmluZ1xuICB0aW1lc3RhbXA6IG51bWJlclxuICBlcnJvcj86IGJvb2xlYW5cbiAgcG9seWxpbmU/OiBzdHJpbmdcbiAgbGVnUG9seWxpbmU/OiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIFRyYXZlbEluZm9DYWNoZSB7XG4gIFtrZXk6IHN0cmluZ106IFRyYXZlbEluZm9cbn1cblxuY29uc3QgQ0FDSEVfS0VZID0gJ3RyYXZlbF9pbmZvX2NhY2hlJ1xuY29uc3QgQ0FDSEVfRFVSQVRJT04gPSAyNCAqIDYwICogNjAgKiAxMDAwIC8vIDI0IGhvdXJzXG5cbmNsYXNzIFRyYXZlbEluZm9NYW5hZ2VyIHtcbiAgcHJpdmF0ZSBjYWNoZTogVHJhdmVsSW5mb0NhY2hlID0ge31cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHN0b3JlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKENBQ0hFX0tFWSlcbiAgICAgICAgaWYgKHN0b3JlZCkge1xuICAgICAgICAgIHRoaXMuY2FjaGUgPSBKU09OLnBhcnNlKHN0b3JlZClcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignW1RyYXZlbEluZm9NYW5hZ2VyXSBDYWNoZSBsb2FkIGVycm9yOicsIGVycm9yKVxuICAgICAgICB0aGlzLmNhY2hlID0ge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldENhY2hlS2V5KHBsYWNlMTogUGxhY2UsIHBsYWNlMjogUGxhY2UpOiBzdHJpbmcge1xuICAgIC8vIEluY2x1ZGUgZGF5IGluZm9ybWF0aW9uIGluIGNhY2hlIGtleVxuICAgIGlmIChwbGFjZTEuZGF5SW5kZXggIT09IHBsYWNlMi5kYXlJbmRleCkge1xuICAgICAgY29uc29sZS53YXJuKCdbVHJhdmVsSW5mb01hbmFnZXJdIEF0dGVtcHRpbmcgdG8gZ2V0IHRyYXZlbCBpbmZvIGZvciBwbGFjZXMgaW4gZGlmZmVyZW50IGRheXM6Jywge1xuICAgICAgICBwbGFjZTE6IHsgbmFtZTogcGxhY2UxLmRpc3BsYXlOYW1lLCBkYXk6IHBsYWNlMS5kYXlJbmRleCB9LFxuICAgICAgICBwbGFjZTI6IHsgbmFtZTogcGxhY2UyLmRpc3BsYXlOYW1lLCBkYXk6IHBsYWNlMi5kYXlJbmRleCB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiAnJzsgLy8gUmV0dXJuIGVtcHR5IHRvIGZvcmNlIHNraXAgY2FjaGVcbiAgICB9XG4gICAgcmV0dXJuIGBkYXkke3BsYWNlMS5kYXlJbmRleH0tJHtwbGFjZTEuaWR9LSR7cGxhY2UyLmlkfWA7XG4gIH1cblxuICBwcml2YXRlIGlzQ2FjaGVWYWxpZChpbmZvOiBUcmF2ZWxJbmZvKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICFpbmZvLmVycm9yICYmIERhdGUubm93KCkgLSBpbmZvLnRpbWVzdGFtcCA8IENBQ0hFX0RVUkFUSU9OXG4gIH1cblxuICBhc3luYyBnZXRUcmF2ZWxJbmZvKHBsYWNlMTogUGxhY2UsIHBsYWNlMjogUGxhY2UpOiBQcm9taXNlPFRyYXZlbEluZm8+IHtcbiAgICBpZiAoIXBsYWNlMT8ubG9jYXRpb24gfHwgIXBsYWNlMj8ubG9jYXRpb24pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbVHJhdmVsSW5mb01hbmFnZXJdIE1pc3NpbmcgbG9jYXRpb246Jywge1xuICAgICAgICBwbGFjZTE6IHBsYWNlMT8uZGlzcGxheU5hbWUsXG4gICAgICAgIHBsYWNlMjogcGxhY2UyPy5kaXNwbGF5TmFtZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4geyBkdXJhdGlvbjogJy0tJywgZGlzdGFuY2U6ICctLScsIHRpbWVzdGFtcDogRGF0ZS5ub3coKSwgZXJyb3I6IHRydWUgfVxuICAgIH1cblxuICAgIC8vIFNraXAgaWYgcGxhY2VzIGFyZSBpbiBkaWZmZXJlbnQgZGF5c1xuICAgIGlmIChwbGFjZTEuZGF5SW5kZXggIT09IHBsYWNlMi5kYXlJbmRleCkge1xuICAgICAgY29uc29sZS53YXJuKCdbVHJhdmVsSW5mb01hbmFnZXJdIENhbm5vdCBnZXQgdHJhdmVsIGluZm8gZm9yIHBsYWNlcyBpbiBkaWZmZXJlbnQgZGF5cycpO1xuICAgICAgcmV0dXJuIHsgZHVyYXRpb246ICctLScsIGRpc3RhbmNlOiAnLS0nLCB0aW1lc3RhbXA6IERhdGUubm93KCksIGVycm9yOiB0cnVlIH1cbiAgICB9XG5cbiAgICBjb25zdCBrZXkgPSB0aGlzLmdldENhY2hlS2V5KHBsYWNlMSwgcGxhY2UyKVxuICAgIC8vIFNraXAgY2FjaGUgaWYga2V5IGlzIGVtcHR5IChkaWZmZXJlbnQgZGF5cylcbiAgICBpZiAoIWtleSkge1xuICAgICAgcmV0dXJuIHsgZHVyYXRpb246ICctLScsIGRpc3RhbmNlOiAnLS0nLCB0aW1lc3RhbXA6IERhdGUubm93KCksIGVycm9yOiB0cnVlIH1cbiAgICB9XG5cbiAgICBjb25zdCBjYWNoZWQgPSB0aGlzLmNhY2hlW2tleV1cblxuICAgIGlmIChjYWNoZWQgJiYgdGhpcy5pc0NhY2hlVmFsaWQoY2FjaGVkKSkge1xuICAgICAgY29uc29sZS5sb2coJ1tUcmF2ZWxJbmZvTWFuYWdlcl0gVXNpbmcgY2FjaGVkIGluZm8gZm9yOicsIHtcbiAgICAgICAgZnJvbTogcGxhY2UxLmRpc3BsYXlOYW1lLFxuICAgICAgICB0bzogcGxhY2UyLmRpc3BsYXlOYW1lXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjYWNoZWRcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ1tUcmF2ZWxJbmZvTWFuYWdlcl0gRmV0Y2hpbmcgbmV3IGluZm8gZm9yOicsIHtcbiAgICAgICAgZnJvbTogcGxhY2UxLmRpc3BsYXlOYW1lLFxuICAgICAgICB0bzogcGxhY2UyLmRpc3BsYXlOYW1lXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdHJhdmVsLWluZm8nLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIG9yaWdpbjoge1xuICAgICAgICAgICAgbG9jYXRpb246IHtcbiAgICAgICAgICAgICAgbGF0TG5nOiB7XG4gICAgICAgICAgICAgICAgbGF0aXR1ZGU6IHBsYWNlMS5sb2NhdGlvbi5sYXRpdHVkZSxcbiAgICAgICAgICAgICAgICBsb25naXR1ZGU6IHBsYWNlMS5sb2NhdGlvbi5sb25naXR1ZGVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGVzdGluYXRpb246IHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiB7XG4gICAgICAgICAgICAgIGxhdExuZzoge1xuICAgICAgICAgICAgICAgIGxhdGl0dWRlOiBwbGFjZTIubG9jYXRpb24ubGF0aXR1ZGUsXG4gICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBwbGFjZTIubG9jYXRpb24ubG9uZ2l0dWRlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9KVxuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tUcmF2ZWxJbmZvTWFuYWdlcl0gQVBJIEVycm9yOicsIHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgICAgIHJldHVybiB7IGR1cmF0aW9uOiAnLS0nLCBkaXN0YW5jZTogJy0tJywgdGltZXN0YW1wOiBEYXRlLm5vdygpLCBlcnJvcjogdHJ1ZSB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICBpZiAoZGF0YS5lcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdbVHJhdmVsSW5mb01hbmFnZXJdIERhdGEgRXJyb3I6JywgZGF0YS5lcnJvcik7XG4gICAgICAgIHJldHVybiB7IGR1cmF0aW9uOiAnLS0nLCBkaXN0YW5jZTogJy0tJywgdGltZXN0YW1wOiBEYXRlLm5vdygpLCBlcnJvcjogdHJ1ZSB9O1xuICAgICAgfVxuXG4gICAgICBjb25zb2xlLmxvZygnW1RyYXZlbEluZm9NYW5hZ2VyXSBSYXcgQVBJIHJlc3BvbnNlOicsIGRhdGEpO1xuXG4gICAgICBjb25zdCBpbmZvOiBUcmF2ZWxJbmZvID0ge1xuICAgICAgICBkdXJhdGlvbjogZGF0YS5kdXJhdGlvbiB8fCAnLS0nLFxuICAgICAgICBkaXN0YW5jZTogZGF0YS5kaXN0YW5jZSB8fCAnLS0nLFxuICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICAgIHBvbHlsaW5lOiBkYXRhLnBvbHlsaW5lLFxuICAgICAgICBsZWdQb2x5bGluZTogZGF0YS5sZWdQb2x5bGluZVxuICAgICAgfVxuXG4gICAgICAvLyBPbmx5IGNhY2hlIGlmIHdlIGhhdmUgdmFsaWQgZGF0YVxuICAgICAgaWYgKGRhdGEuZHVyYXRpb24gJiYgZGF0YS5kaXN0YW5jZSAmJiAhZGF0YS5kdXJhdGlvbi5pbmNsdWRlcygnTmFOJykgJiYgIWRhdGEuZGlzdGFuY2UuaW5jbHVkZXMoJ05hTicpKSB7XG4gICAgICAgIHRoaXMuY2FjaGVba2V5XSA9IGluZm87XG4gICAgICAgIHRoaXMucGVyc2lzdCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignW1RyYXZlbEluZm9NYW5hZ2VyXSBJbnZhbGlkIGRhdGEgcmVjZWl2ZWQ6JywgZGF0YSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpbmZvXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tUcmF2ZWxJbmZvTWFuYWdlcl0gRXJyb3I6JywgZXJyb3IpXG4gICAgICBjb25zdCBlcnJvckluZm8gPSB7IGR1cmF0aW9uOiAnLS0nLCBkaXN0YW5jZTogJy0tJywgdGltZXN0YW1wOiBEYXRlLm5vdygpLCBlcnJvcjogdHJ1ZSB9XG4gICAgICB0aGlzLmNhY2hlW2tleV0gPSBlcnJvckluZm9cbiAgICAgIHJldHVybiBlcnJvckluZm9cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHBlcnNpc3QoKTogdm9pZCB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0cnkge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShDQUNIRV9LRVksIEpTT04uc3RyaW5naWZ5KHRoaXMuY2FjaGUpKVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignW1RyYXZlbEluZm9NYW5hZ2VyXSBDYWNoZSBzYXZlIGVycm9yOicsIGVycm9yKVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNsZWFyQ2FjaGUoKTogdm9pZCB7XG4gICAgdGhpcy5jYWNoZSA9IHt9XG4gICAgdGhpcy5wZXJzaXN0KClcbiAgfVxuXG4gIC8vIEFkZCB0aGlzIG5ldyBtZXRob2QgdG8gY2xlYXIgcm91dGVzIGZvciBzcGVjaWZpYyBwbGFjZXNcbiAgY2xlYXJSb3V0ZXNGb3JQbGFjZShwbGFjZTogUGxhY2UpOiB2b2lkIHtcbiAgICAvLyBDbGVhciBhbGwgcm91dGVzIHRoYXQgaW52b2x2ZSB0aGlzIHBsYWNlXG4gICAgT2JqZWN0LmtleXModGhpcy5jYWNoZSkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgaWYgKGtleS5pbmNsdWRlcyhwbGFjZS5pZCkpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuY2FjaGVba2V5XTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyBVcGRhdGUgbG9jYWxTdG9yYWdlXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShDQUNIRV9LRVksIEpTT04uc3RyaW5naWZ5KHRoaXMuY2FjaGUpKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHRyYXZlbEluZm9NYW5hZ2VyID0gbmV3IFRyYXZlbEluZm9NYW5hZ2VyKClcbiJdLCJuYW1lcyI6WyJDQUNIRV9LRVkiLCJDQUNIRV9EVVJBVElPTiIsIlRyYXZlbEluZm9NYW5hZ2VyIiwiZ2V0Q2FjaGVLZXkiLCJwbGFjZTEiLCJwbGFjZTIiLCJkYXlJbmRleCIsImNvbnNvbGUiLCJ3YXJuIiwibmFtZSIsImRpc3BsYXlOYW1lIiwiZGF5IiwiaWQiLCJpc0NhY2hlVmFsaWQiLCJpbmZvIiwiZXJyb3IiLCJEYXRlIiwibm93IiwidGltZXN0YW1wIiwiZ2V0VHJhdmVsSW5mbyIsImxvY2F0aW9uIiwibG9nIiwiZHVyYXRpb24iLCJkaXN0YW5jZSIsImtleSIsImNhY2hlZCIsImNhY2hlIiwiZnJvbSIsInRvIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9yaWdpbiIsImxhdExuZyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwiZGVzdGluYXRpb24iLCJvayIsInN0YXR1cyIsImRhdGEiLCJqc29uIiwicG9seWxpbmUiLCJsZWdQb2x5bGluZSIsImluY2x1ZGVzIiwicGVyc2lzdCIsImVycm9ySW5mbyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJjbGVhckNhY2hlIiwiY2xlYXJSb3V0ZXNGb3JQbGFjZSIsInBsYWNlIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJjb25zdHJ1Y3RvciIsInN0b3JlZCIsImdldEl0ZW0iLCJwYXJzZSIsInRyYXZlbEluZm9NYW5hZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/travel-info-utils.ts\n"));

/***/ })

});