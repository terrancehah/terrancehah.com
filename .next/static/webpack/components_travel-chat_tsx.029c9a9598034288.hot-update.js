"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_travel-chat_tsx",{

/***/ "./hooks/useTravelChat.ts":
/*!********************************!*\
  !*** ./hooks/useTravelChat.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTravelChat: function() { return /* binding */ useTravelChat; }\n/* harmony export */ });\n/* harmony import */ var ai_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ai/react */ \"./node_modules/ai/react/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _managers_stage_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../managers/stage-manager */ \"./managers/stage-manager.ts\");\n/* harmony import */ var _utils_local_metrics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/local-metrics */ \"./utils/local-metrics.ts\");\n\n\n\n\nfunction useTravelChat(param) {\n    let { currentDetails, savedPlaces, currentStage, metrics } = param;\n    const quickResponseInProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const [mainChatMessages, setMainChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [userMetrics, setUserMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [showUpgradePopup, setShowUpgradePopup] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const mainChat = (0,ai_react__WEBPACK_IMPORTED_MODULE_3__.useChat)({\n        api: \"/api/chat\",\n        id: \"travel-chat\",\n        body: {\n            currentDetails,\n            savedPlaces,\n            currentStage,\n            metrics: userMetrics\n        },\n        onError: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((error)=>{\n            console.error(\"[MainChat] Error:\", error);\n            quickResponseInProgress.current = false;\n        }, []),\n        onFinish: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (message)=>{\n            var _message_content;\n            // Only trigger quick response for complete assistant messages\n            if (message.role !== \"assistant\" || !((_message_content = message.content) === null || _message_content === void 0 ? void 0 : _message_content.trim())) return;\n            // Prevent multiple quick response triggers\n            if (quickResponseInProgress.current) return;\n            // If it's a limit message, don't trigger quick response\n            if (message.content.includes(\"You've reached the maximum number of places\")) {\n                quickResponseInProgress.current = false;\n                return;\n            }\n            quickResponseInProgress.current = true;\n            try {\n                // Reset previous messages to ensure clean state\n                await quickResponseChat.reload();\n                // Add the new message\n                await quickResponseChat.append(message);\n            } catch (error) {\n                // console.error('[QuickResponse] Error triggering quick response:', error);\n                quickResponseInProgress.current = false;\n            }\n        }, [])\n    });\n    const quickResponseChat = (0,ai_react__WEBPACK_IMPORTED_MODULE_3__.useChat)({\n        api: \"/api/chat/quick-response\",\n        id: \"quick-response-chat\",\n        body: {\n            currentDetails,\n            savedPlaces,\n            currentStage,\n            metrics: userMetrics\n        },\n        onFinish: (message)=>{\n            var _message_toolInvocations;\n            // Keep loading until we have valid responses\n            const hasValidResponses = message === null || message === void 0 ? void 0 : (_message_toolInvocations = message.toolInvocations) === null || _message_toolInvocations === void 0 ? void 0 : _message_toolInvocations.some((t)=>{\n                var _t_result_props_responses, _t_result_props, _t_result;\n                return t.toolName === \"quickResponse\" && t.state === \"result\" && ((_t_result = t.result) === null || _t_result === void 0 ? void 0 : (_t_result_props = _t_result.props) === null || _t_result_props === void 0 ? void 0 : (_t_result_props_responses = _t_result_props.responses) === null || _t_result_props_responses === void 0 ? void 0 : _t_result_props_responses.length) > 0;\n            });\n            if (!hasValidResponses) {\n                // console.log('[QuickResponse] No valid responses in finished message');\n                return;\n            }\n            quickResponseInProgress.current = false;\n        },\n        onError: (error)=>{\n            // console.error('[QuickResponse] Error:', error);\n            quickResponseInProgress.current = false;\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const mappedMessages = mainChat.messages.map((msg)=>({\n                ...msg,\n                role: msg.role === \"data\" ? \"system\" : msg.role\n            }));\n        setMainChatMessages(mappedMessages);\n    }, [\n        mainChat.messages\n    ]);\n    // Update metrics when stage prompts change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (currentStage === 3) {\n            var _currentMetrics_stagePrompts;\n            const currentMetrics = (0,_utils_local_metrics__WEBPACK_IMPORTED_MODULE_2__.getStoredMetrics)();\n            setUserMetrics(currentMetrics);\n            // Show popup when limit is reached\n            if (((_currentMetrics_stagePrompts = currentMetrics.stagePrompts) === null || _currentMetrics_stagePrompts === void 0 ? void 0 : _currentMetrics_stagePrompts[3]) >= _managers_stage_manager__WEBPACK_IMPORTED_MODULE_1__.STAGE_LIMITS[3].maxPrompts) {\n                setShowUpgradePopup(true);\n            }\n        }\n    }, [\n        currentStage\n    ]);\n    // Keep local metrics in sync\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const currentMetrics = (0,_utils_local_metrics__WEBPACK_IMPORTED_MODULE_2__.getStoredMetrics)();\n        setUserMetrics(currentMetrics);\n    }, [\n        currentStage\n    ]);\n    const quickResponses = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        var _apiResponse_toolInvocations, _quickResponseInvocation_result_props, _quickResponseInvocation_result;\n        const messages = quickResponseChat.messages;\n        if (messages.length < 2) {\n            // console.log('[QuickResponse] Waiting for API response...');\n            return [];\n        }\n        const apiResponse = messages[messages.length - 1];\n        // console.log('[QuickResponse] Processing API response:', {\n        //     messageId: apiResponse.id,\n        //     hasToolInvocations: !!apiResponse.toolInvocations,\n        //     toolInvocations: apiResponse.toolInvocations?.map(t => ({\n        //         name: t.toolName,\n        //         state: t.state\n        //     }))\n        // });\n        const quickResponseInvocation = apiResponse === null || apiResponse === void 0 ? void 0 : (_apiResponse_toolInvocations = apiResponse.toolInvocations) === null || _apiResponse_toolInvocations === void 0 ? void 0 : _apiResponse_toolInvocations.find((t)=>t.toolName === \"quickResponse\" && t.state === \"result\");\n        if (!(quickResponseInvocation === null || quickResponseInvocation === void 0 ? void 0 : (_quickResponseInvocation_result = quickResponseInvocation.result) === null || _quickResponseInvocation_result === void 0 ? void 0 : (_quickResponseInvocation_result_props = _quickResponseInvocation_result.props) === null || _quickResponseInvocation_result_props === void 0 ? void 0 : _quickResponseInvocation_result_props.responses)) {\n            // console.log('[QuickResponse] No valid responses found in API response');\n            return [];\n        }\n        const responses = quickResponseInvocation.result.props.responses;\n        if (responses.length > 0) {\n            // console.log('[QuickResponse] Got valid responses:', responses);\n            return responses;\n        }\n        // console.log('[QuickResponse] Empty responses array');\n        return [];\n    }, [\n        quickResponseChat.messages\n    ]);\n    const handleStageProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (nextStage)=>{\n        const { canProgress, missingRequirements, upgradeRequired } = validateStageProgression(nextStage, currentStage, currentDetails, userMetrics);\n        if (canProgress) {\n            setUserMetrics((prevMetrics)=>({\n                    ...prevMetrics,\n                    currentStage: nextStage\n                }));\n            console.log(\"[Stage Progression] Moving to stage \".concat(nextStage));\n            if (upgradeRequired) {\n                console.log(\"[Stage Progression] Upgrade required for stage progression\");\n            // You can add any upgrade-specific logic here\n            }\n            return {\n                type: \"stageProgress\",\n                props: {\n                    nextStage,\n                    reason: \"Stage requirements met\",\n                    criteria: missingRequirements\n                }\n            };\n        }\n        return {\n            type: \"stageProgress\",\n            props: {\n                nextStage: currentStage,\n                reason: \"Stage requirements not met\",\n                criteria: missingRequirements\n            }\n        };\n    }, [\n        currentStage,\n        currentDetails,\n        userMetrics\n    ]);\n    const handleUpgrade = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        // Handle upgrade logic here\n        console.log(\"Handling upgrade...\");\n        setShowUpgradePopup(false);\n    }, []);\n    return {\n        mainChat,\n        quickResponseChat,\n        userMetrics,\n        showUpgradePopup,\n        setShowUpgradePopup,\n        handleUpgrade,\n        messages: mainChatMessages,\n        quickResponses,\n        isQuickResponseLoading: quickResponseInProgress.current,\n        handleStageProgress\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useTravelChat.ts\n"));

/***/ })

});