"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_daily-planner_tsx",{

/***/ "./utils/travel-info-utils.ts":
/*!************************************!*\
  !*** ./utils/travel-info-utils.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   travelInfoManager: function() { return /* binding */ travelInfoManager; }\n/* harmony export */ });\nconst CACHE_DURATION = 24 * 60 * 60 * 1000 // 24 hours\n;\nclass TravelInfoManager {\n    getCacheKey(place1, place2) {\n        return \"\".concat(place1.id, \"-\").concat(place2.id);\n    }\n    isCacheValid(info) {\n        return !info.error && Date.now() - info.timestamp < CACHE_DURATION;\n    }\n    async getTravelInfo(place1, place2) {\n        if (!(place1 === null || place1 === void 0 ? void 0 : place1.location) || !(place2 === null || place2 === void 0 ? void 0 : place2.location)) {\n            console.log(\"[TravelInfoManager] Missing location:\", {\n                place1: place1 === null || place1 === void 0 ? void 0 : place1.displayName,\n                place2: place2 === null || place2 === void 0 ? void 0 : place2.displayName,\n                loc1: place1 === null || place1 === void 0 ? void 0 : place1.location,\n                loc2: place2 === null || place2 === void 0 ? void 0 : place2.location\n            });\n            return {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n        }\n        const key = this.getCacheKey(place1, place2);\n        const cached = this.cache[key];\n        if (cached && this.isCacheValid(cached)) {\n            console.log(\"[TravelInfoManager] Using cached info for:\", {\n                from: place1.displayName,\n                to: place2.displayName\n            });\n            return cached;\n        }\n        try {\n            console.log(\"[TravelInfoManager] Fetching new info for:\", {\n                from: place1.displayName,\n                to: place2.displayName\n            });\n            const response = await fetch(\"/api/travel-info\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    origin: {\n                        location: {\n                            latLng: {\n                                latitude: place1.location.latitude,\n                                longitude: place1.location.longitude\n                            }\n                        }\n                    },\n                    destination: {\n                        location: {\n                            latLng: {\n                                latitude: place2.location.latitude,\n                                longitude: place2.location.longitude\n                            }\n                        }\n                    }\n                })\n            });\n            if (!response.ok) {\n                console.error(\"[TravelInfoManager] API Error:\", response.status);\n                return {\n                    duration: \"--\",\n                    distance: \"--\",\n                    timestamp: Date.now(),\n                    error: true\n                };\n            }\n            const data = await response.json();\n            if (data.error) {\n                console.error(\"[TravelInfoManager] Data Error:\", data.error);\n                return {\n                    duration: \"--\",\n                    distance: \"--\",\n                    timestamp: Date.now(),\n                    error: true\n                };\n            }\n            console.log(\"[TravelInfoManager] Raw API response:\", data);\n            const info = {\n                duration: data.duration || \"--\",\n                distance: data.distance || \"--\",\n                timestamp: Date.now(),\n                polyline: data.polyline,\n                legPolyline: data.legPolyline\n            };\n            // Only cache if we have valid data\n            if (data.duration && data.distance && !data.duration.includes(\"NaN\") && !data.distance.includes(\"NaN\")) {\n                this.cache[key] = info;\n            } else {\n                console.error(\"[TravelInfoManager] Invalid data received:\", data);\n            }\n            return info;\n        } catch (error) {\n            console.error(\"[TravelInfoManager] Error:\", error);\n            const errorInfo = {\n                duration: \"--\",\n                distance: \"--\",\n                timestamp: Date.now(),\n                error: true\n            };\n            this.cache[key] = errorInfo;\n            return errorInfo;\n        }\n    }\n    clearCache() {\n        this.cache = {};\n    }\n    // Add this new method to clear routes for specific places\n    clearRoutesForPlace(place) {\n        // Clear all routes that involve this place\n        Object.keys(this.cache).forEach((key)=>{\n            if (key.includes(place.id)) {\n                delete this.cache[key];\n            }\n        });\n    }\n    constructor(){\n        this.cache = {};\n        this.cache = {};\n    }\n}\nconst travelInfoManager = new TravelInfoManager();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/travel-info-utils.ts\n"));

/***/ })

});